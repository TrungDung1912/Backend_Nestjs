var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.162,1,3.006]],["body/controllers/AppController.html",[0,1.906,1,4.933,2,1.537,3,0.158,4,0.158,5,0.106,6,4.771,7,0.32,8,0.012,9,3.482,10,4.771,11,2.713,12,4.771,13,0.8,14,4.694,15,4.771,16,4.206,17,5.459,18,4.317,19,3.289,20,3.708,21,5.459,22,5.916,23,4.206,24,5.459,25,3.708,26,5.459,27,2.4,28,5.459,29,0.158,30,0.246,31,2.147,32,3.235,33,2.226,34,0.01,35,0.01]],["title/modules/AppModule.html",[36,0.96,37,3.006]],["body/modules/AppModule.html",[1,4.288,2,1.417,3,0.101,4,0.101,5,0.068,7,0.321,8,0.013,13,0.514,14,4.52,15,3.063,16,3.675,29,0.101,30,0.158,34,0.007,35,0.007,36,1.37,37,6.173,38,1.429,39,1.483,40,1.603,41,1.603,42,1.483,43,2.691,44,1.603,45,3.063,46,3.063,47,3.063,48,4.813,49,4.813,50,4.813,51,4.813,52,4.813,53,4.813,54,4.813,55,4.813,56,4.813,57,4.52,58,4.813,59,4.52,60,2.301,61,1.603,62,1.603,63,3.505,64,2.691,65,3.505,66,1.821,67,0.987,68,4.396,69,2.003,70,3.505,71,3.505,72,3.505,73,1.742,74,1.241,75,1.742,76,0.987,77,3.505,78,3.505,79,3.505,80,3.505,81,3.505,82,3.505,83,3.505,84,3.505,85,3.505,86,3.505,87,2.772,88,3.505,89,2.772,90,3.505,91,3.505,92,3.505,93,3.063,94,1.483,95,2.003,96,3.505,97,3.505,98,3.505,99,2.772,100,1.161,101,3.505,102,3.505,103,3.505,104,5.031,105,3.505,106,0.926,107,2.772,108,3.505,109,3.505,110,1.019]],["title/injectables/AppService.html",[14,2.631,111,0.819]],["body/injectables/AppService.html",[3,0.174,4,0.174,5,0.117,7,0.234,8,0.012,13,0.883,14,4.585,29,0.174,30,0.271,34,0.01,35,0.01,106,1.592,111,1.427,112,2.208,113,5.264,114,0.679,115,1.961,116,7.956,117,0.852,118,6.025,119,1.643,120,1.092,121,6.025,122,6.025,123,3.843]],["title/controllers/AuthController.html",[0,1.162,124,3.006]],["body/controllers/AuthController.html",[0,0.904,2,0.904,3,0.093,4,0.093,5,0.062,7,0.298,8,0.013,9,4.384,10,2.805,11,1.595,12,2.805,13,0.471,20,2.18,22,4.124,23,3.199,25,2.18,27,2.713,29,0.093,30,0.145,31,1.262,32,2.075,34,0.007,35,0.007,89,2.538,93,2.805,100,1.853,106,1.817,110,1.627,114,0.362,115,1.287,117,0.972,119,1.875,124,3.439,125,2.805,126,1.529,127,2.805,128,4.719,129,4.719,130,5.596,131,5.596,132,4.719,133,4.89,134,3.21,135,2.516,136,1.76,137,2.538,138,2.298,139,3.21,140,3.21,141,2.064,142,0.806,143,0.904,144,1.936,145,1.262,146,3.21,147,3.21,148,3.21,149,5.619,150,3.21,151,4.929,152,3.21,153,3.21,154,3.21,155,4.124,156,3.21,157,3.21,158,3.21,159,4.124,160,3.21,161,3.21,162,3.21,163,3.74,164,3.21,165,1.563,166,3.21,167,3.21,168,3.21,169,3.21,170,3.21,171,3.21,172,1.667,173,6.17,174,1.529,175,1.309,176,2.538,177,2.538,178,2.538,179,2.843,180,1.934,181,2.18,182,1.747,183,1.358,184,2.568,185,2.538,186,3.21,187,3.21,188,1.747,189,4.719,190,1.411,191,3.21,192,3.21,193,3.21,194,3.21,195,3.21,196,3.21,197,3.21,198,3.21,199,5.596,200,3.21,201,3.21,202,3.21,203,3.21,204,3.21,205,4.719,206,3.21,207,3.21,208,3.21,209,1.417,210,2.538,211,1.176,212,3.21,213,3.21,214,3.21,215,2.805,216,3.21,217,2.339,218,3.21,219,3.21,220,3.21,221,2.805,222,3.21,223,3.21,224,3.21,225,3.21,226,3.21,227,3.21]],["title/modules/AuthModule.html",[36,0.96,48,2.801]],["body/modules/AuthModule.html",[2,1.637,3,0.125,4,0.125,5,0.084,7,0.317,8,0.013,13,0.632,16,4.021,19,2.599,23,4.676,29,0.125,30,0.194,34,0.008,35,0.008,36,1.531,38,1.759,39,1.825,40,1.973,41,1.973,42,1.825,43,3.006,44,3.006,48,5.648,57,4.825,59,4.825,60,2.658,61,1.973,62,1.973,64,3.006,68,5.079,69,2.465,99,3.411,100,1.428,107,3.411,124,4.79,176,3.411,228,3.769,229,4.313,230,3.769,231,3.769,232,5.137,233,5.137,234,4.313,235,2.24,236,3.143,237,4.313,238,4.313,239,5.812,240,4.313,241,3.411,242,4.313,243,4.596,244,4.313,245,4.313,246,4.313,247,4.313,248,4.313,249,3.769,250,4.313,251,4.313,252,3.769,253,4.313,254,4.313]],["title/injectables/AuthService.html",[23,2.358,111,0.819]],["body/injectables/AuthService.html",[3,0.075,4,0.075,5,0.05,7,0.272,8,0.013,13,0.381,16,3.78,23,2.299,29,0.075,30,0.117,31,1.581,32,2.436,34,0.006,35,0.006,69,1.484,100,2.416,106,1.747,110,1.431,111,0.798,112,0.952,114,0.293,115,1.097,117,0.935,119,1.342,120,1.108,133,4.842,135,2.123,138,2.182,141,1.664,142,0.868,143,0.729,144,1.56,145,2.179,151,4.396,155,5.238,159,4.301,163,3.015,165,1.332,180,1.565,181,1.764,182,1.413,183,1.099,184,3.598,185,2.054,209,2.279,210,3.18,211,2.504,215,5.54,217,3.586,235,3.293,236,1.892,241,2.054,243,3.18,249,3.514,252,2.269,255,2.269,256,1.097,257,4.922,258,4.922,259,3.514,260,4.022,261,2.597,262,6.612,263,2.597,264,4.022,265,2.597,266,3.514,267,2.597,268,4.022,269,4.301,270,2.597,271,1.565,272,3.514,273,3.139,274,2.965,275,2.597,276,2.597,277,2.597,278,1.657,279,2.597,280,4.022,281,2.597,282,2.597,283,2.93,284,4.022,285,1.778,286,4.022,287,4.022,288,2.597,289,2.878,290,3.514,291,2.054,292,1.785,293,2.423,294,3.892,295,4.022,296,4.022,297,4.022,298,6.34,299,4.022,300,1.526,301,4.022,302,3.514,303,4.022,304,4.022,305,4.022,306,4.022,307,4.922,308,4.022,309,4.922,310,2.054,311,2.597,312,2.269,313,1.099,314,2.269,315,4.022,316,3.892,317,2.597,318,2.597,319,2.597,320,2.054,321,2.597,322,4.022,323,2.299,324,4.022,325,3.514,326,4.022,327,2.269,328,2.269,329,2.597,330,1.484,331,2.269]],["title/controllers/CompaniesController.html",[0,1.162,332,3.006]],["body/controllers/CompaniesController.html",[0,1.011,2,1.011,3,0.104,4,0.104,5,0.07,7,0.292,8,0.012,9,2.289,11,2.963,13,0.526,27,2.622,29,0.104,30,0.162,33,1.464,34,0.007,35,0.007,74,1.271,94,2.751,106,1.816,114,0.404,115,1.396,117,0.972,119,1.874,120,1.25,126,1.71,135,2.748,136,1.759,138,2.37,141,2.063,142,0.806,143,0.903,144,1.935,149,2.838,172,3.097,174,1.71,175,1.464,182,1.953,183,1.519,188,1.953,190,1.578,300,2.263,332,3.728,333,3.136,334,3.136,335,1.734,336,2.431,337,2.086,338,2.431,339,3.136,340,4.556,341,3.589,342,1.578,343,2.858,344,2.615,345,3.264,346,1.752,347,2.925,348,3.589,349,2.25,350,1.464,351,3.589,352,3.589,353,2.53,354,1.578,355,2.925,356,3.589,357,1.784,358,5.104,359,3.264,360,3.589,361,1.953,362,2.052,363,2.165,364,3.803,365,3.136,366,1.464,367,4.046,368,1.464,369,3.589,370,3.589,371,1.641,372,3.589,373,2.162,374,2.162,375,2.162,376,3.589,377,2.052,378,2.052,379,5.117,380,3.589,381,3.083,382,3.589,383,3.589]],["title/modules/CompaniesModule.html",[36,0.96,49,2.801]],["body/modules/CompaniesModule.html",[2,1.897,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,13,0.794,29,0.157,30,0.244,34,0.01,35,0.01,36,1.707,38,2.209,39,2.293,40,2.477,41,2.477,42,2.293,43,3.353,44,2.477,49,5.463,60,3.081,61,2.477,62,2.477,64,2.477,66,2.814,67,1.525,142,0.635,332,5.343,346,1.855,364,5.131,365,4.734,384,4.734,385,4.734,386,5.417,387,5.417,388,4.909,389,4.734,390,2.948,391,4.734,392,2.209]],["title/injectables/CompaniesService.html",[111,0.819,364,2.631]],["body/injectables/CompaniesService.html",[3,0.085,4,0.085,5,0.057,7,0.287,8,0.013,13,0.429,29,0.085,30,0.132,31,1.731,32,1.285,34,0.006,35,0.006,67,0.823,73,1.453,74,1.875,75,1.453,76,1.491,94,2.917,95,1.671,100,2.52,106,1.755,110,0.85,111,0.874,112,1.071,114,0.329,115,1.201,117,0.94,119,1.724,120,1.156,135,2.619,138,2.11,141,1.994,142,0.779,143,0.873,144,1.87,145,2.317,165,0.968,183,1.237,209,1.769,211,2.316,285,1.71,292,1.491,300,1.671,330,3.026,335,1.28,336,1.795,337,1.795,338,1.795,339,3.847,340,4.236,342,1.935,343,2.328,346,2.274,349,2.328,350,1.795,353,2.441,354,1.935,357,2.187,358,4.817,363,2.241,364,2.808,366,1.192,367,3.481,368,1.192,389,2.554,393,2.554,394,2.923,395,3.206,396,2.923,397,4.402,398,2.923,399,2.52,400,2.923,401,2.923,402,2.923,403,2.923,404,1.591,405,2.312,406,1.761,407,1.671,408,1.671,409,2.923,410,2.923,411,2.923,412,2.923,413,1.192,414,3.19,415,1.761,416,1.761,417,1.761,418,1.761,419,1.761,420,1.761,421,1.761,422,1.518,423,2.652,424,2.652,425,2.923,426,2.652,427,1.761,428,2.652,429,2.923,430,1.761,431,1.761,432,1.761,433,1.761,434,1.761,435,1.761,436,1.591,437,1.761,438,1.761,439,1.761,440,1.761,441,1.761,442,2.652,443,1.761,444,1.671,445,1.761,446,3.206,447,1.761,448,2.652,449,2.652,450,1.761,451,1.761,452,2.652,453,1.671,454,1.761,455,1.761,456,1.761,457,1.761,458,1.671,459,1.761,460,1.761,461,1.761,462,1.761,463,2.923,464,4.402,465,1.237,466,1.285,467,1.285,468,1.591,469,1.453,470,2.923]],["title/classes/Company.html",[30,0.186,346,1.412]],["body/classes/Company.html",[3,0.115,4,0.115,5,0.077,7,0.214,8,0.012,29,0.182,30,0.179,34,0.008,35,0.008,67,1.122,76,1.551,110,1.159,114,0.449,117,1.133,120,1.216,136,2.05,142,0.74,143,1.096,209,1.197,256,1.502,285,1.565,292,1.777,313,2.67,346,1.885,388,2.904,392,2.245,405,3.151,413,2.573,465,2.67,466,2.774,467,2.774,468,3.433,469,3.671,471,0.989,472,2.904,473,3.433,474,2.67,475,4.285,476,3.433,477,5.055,478,3.985,479,3.985,480,3.606,481,3.802,482,4.222,483,3.985,484,3.985,485,3.985,486,3.985,487,2.86,488,3.985,489,3.985,490,3.985,491,3.985,492,3.985,493,2.401,494,3.148,495,2.401,496,2.573,497,3.482]],["title/classes/Company-1.html",[30,0.155,346,1.178,422,1.787]],["body/classes/Company-1.html",[3,0.107,4,0.107,5,0.072,7,0.236,8,0.012,29,0.107,30,0.297,34,0.008,35,0.008,76,1.475,110,1.079,114,0.418,117,0.859,120,1.187,136,1.555,142,0.816,143,0.915,165,1.735,256,1.429,274,3.156,285,1.506,346,2.382,399,1.988,469,3.458,471,0.92,474,2.217,475,4.123,487,1.927,496,2.136,498,5.216,499,2.703,500,3.92,501,3.71,502,3.71,503,3.71,504,2.121,505,2.994,506,2.994,507,2.994,508,2.994,509,3.341,510,2.85,511,4.424,512,3.557,513,1.697,514,4.424,515,2.019,516,2.235,517,3.322,518,3.882,519,3.882,520,3.882,521,3.722,522,4.801,523,5.07,524,4.192,525,4.192,526,4.48,527,2.703,528,2.703,529,2.019,530,3.557,531,3.557,532,3.817,533,3.817,534,4.424,535,4.577,536,4.424,537,3.471]],["title/classes/Company-2.html",[30,0.155,346,1.178,538,2.72]],["body/classes/Company-2.html",[3,0.104,4,0.104,5,0.07,7,0.253,8,0.012,29,0.173,30,0.322,33,2.092,34,0.007,35,0.007,76,1.444,114,0.406,117,0.726,120,1.224,123,2.297,136,1.313,142,0.863,143,0.856,163,1.96,179,2.17,180,3.599,190,1.584,256,1.399,271,3.09,285,1.482,292,2.014,293,2.189,346,2.356,399,1.947,471,0.893,473,3.542,474,2.171,496,2.436,500,3.952,504,3.415,505,2.932,506,2.932,507,2.932,508,2.932,510,3.25,513,1.647,515,1.96,517,3.326,518,4.031,519,3.976,520,3.976,521,3.811,524,3.09,525,3.09,539,2.297,540,3.602,541,3.602,542,3.09,543,4.353,544,1.96,545,3.737,546,3.891,547,3.922,548,3.922,549,2.624,550,2.624,551,2.297,552,3.737,553,2.624]],["title/classes/CreateCompanyDto.html",[30,0.186,340,2.631]],["body/classes/CreateCompanyDto.html",[3,0.147,4,0.147,5,0.099,7,0.197,8,0.012,29,0.147,30,0.291,34,0.009,35,0.009,114,0.572,117,1.06,120,1.236,136,1.919,142,0.907,143,0.985,256,1.764,340,4.125,471,1.259,473,4.211,474,3.275,475,5.256,500,3.686,513,2.321,517,3.056,554,6.763,555,4.014,556,4.077,557,8.14,558,5.076,559,5.076,560,5.076,561,5.076]],["title/classes/CreateFileDto.html",[30,0.186,562,2.631]],["body/classes/CreateFileDto.html",[3,0.188,4,0.188,5,0.126,8,0.011,29,0.188,30,0.292,34,0.011,35,0.011,471,1.61,562,4.79,563,5.672,564,5.133]],["title/classes/CreateJobDto.html",[30,0.186,516,2.485]],["body/classes/CreateJobDto.html",[3,0.082,4,0.082,5,0.055,7,0.202,8,0.012,29,0.082,30,0.261,34,0.006,35,0.006,76,1.213,110,1.252,114,0.32,117,1.055,120,1.174,136,1.91,142,0.77,143,1.006,165,1.426,256,1.175,274,2.595,285,0.704,346,2.337,399,2.204,469,3.647,471,0.704,474,2.641,475,1.929,487,2.237,496,1.158,498,5.979,499,2.069,500,3.681,504,1.623,505,2.462,506,2.462,507,2.462,508,2.462,509,2.747,510,2.343,511,3.791,512,2.925,513,1.299,514,3.791,515,1.545,516,2.595,517,3.204,518,3.999,519,3.999,520,3.999,521,3.743,522,5.194,523,5.348,524,4.422,525,4.422,526,4.774,527,2.069,528,2.069,529,2.831,530,4.238,531,4.238,532,4.548,533,4.548,534,4.973,535,3.764,536,4.973,537,3.901,556,3.994,565,2.482,566,2.84,567,2.84,568,4.307,569,4.307,570,2.84,571,2.482,572,2.84,573,2.84,574,2.84,575,2.84,576,2.84,577,2.84,578,2.482,579,2.482,580,2.84,581,2.84]],["title/classes/CreatePermissionDto.html",[30,0.186,582,2.631]],["body/classes/CreatePermissionDto.html",[3,0.139,4,0.139,5,0.093,7,0.186,8,0.012,29,0.139,30,0.281,34,0.009,35,0.009,36,1.771,114,0.54,117,1.038,120,1.222,136,1.878,142,0.891,143,0.965,256,1.701,471,1.19,500,3.622,513,2.194,517,2.991,518,3.998,519,3.998,520,3.998,521,3.832,556,3.992,582,3.977,583,6.645,584,3.793,585,4.85,586,5.164,587,4.797,588,4.797,589,4.797,590,4.797]],["title/classes/CreateResumeDto.html",[30,0.186,591,2.485]],["body/classes/CreateResumeDto.html",[3,0.109,4,0.109,5,0.073,7,0.237,8,0.012,29,0.153,30,0.299,34,0.008,35,0.008,76,1.488,114,0.423,117,1.026,120,1.131,136,1.856,143,0.979,256,1.441,292,1.968,353,1.871,471,0.932,496,3.101,500,3.731,504,2.147,505,2.147,506,2.147,507,2.147,508,2.147,509,2.396,510,2.044,511,2.737,512,2.551,513,1.718,514,2.737,515,2.044,517,3.23,518,4.056,519,4.056,520,4.056,521,3.888,526,3.589,542,3.683,556,3.945,591,3.184,592,5.89,593,2.737,594,5.541,595,5.541,596,4.212,597,5.427,598,5.094,599,3.756,600,3.756,601,3.756,602,3.756,603,3.756,604,3.756,605,2.396,606,4.179]],["title/classes/CreateRoleDto.html",[30,0.186,607,2.631]],["body/classes/CreateRoleDto.html",[3,0.126,4,0.126,5,0.084,7,0.227,8,0.012,29,0.126,30,0.263,34,0.008,35,0.008,76,1.646,110,1.699,114,0.49,117,0.998,120,1.072,136,1.807,142,0.863,143,0.928,256,1.594,289,3.429,353,1.54,471,1.079,474,3.116,482,3.341,487,3.666,496,2.383,500,3.508,509,3.728,512,3.969,513,1.989,517,3.211,518,3.914,519,3.914,520,3.914,521,3.612,523,4.259,527,4.259,528,3.169,537,4.428,542,3.521,551,4.502,556,3.84,571,3.8,606,4.621,607,3.728,608,6.435,609,3.439,610,4.349,611,5.845,612,5.845,613,4.349,614,4.349,615,3.334,616,4.349,617,4.349,618,4.349]],["title/classes/CreateSubscriberDto.html",[30,0.186,619,2.631]],["body/classes/CreateSubscriberDto.html",[3,0.136,4,0.136,5,0.091,7,0.182,8,0.012,29,0.136,30,0.277,34,0.009,35,0.009,110,1.786,114,0.528,117,0.969,120,1.216,136,1.755,142,0.925,143,0.901,256,1.676,292,1.93,471,1.163,500,3.464,509,3.919,510,3.343,513,2.145,517,3.159,518,3.849,519,3.849,520,3.849,521,3.596,522,6.125,523,5.299,524,4.382,525,4.382,526,4.939,527,3.417,528,3.417,529,3.729,556,3.729,578,4.098,579,4.098,619,3.919,620,6.355,621,3.708,622,4.69,623,4.69,624,4.69]],["title/classes/CreateUserCVDto.html",[30,0.186,605,2.631]],["body/classes/CreateUserCVDto.html",[3,0.117,4,0.117,5,0.079,7,0.247,8,0.012,29,0.161,30,0.308,34,0.008,35,0.008,76,1.567,114,0.456,117,0.9,120,1.091,136,1.629,143,0.901,256,1.518,292,1.567,353,2.426,471,1.004,496,3.1,500,3.788,504,2.313,505,2.313,506,2.313,507,2.313,508,2.313,509,2.581,510,2.202,511,2.949,512,2.748,513,1.851,514,2.949,515,2.202,517,3.275,518,4.024,519,4.024,520,4.024,521,3.788,526,4.652,542,3.832,556,3.461,591,2.438,592,5.417,593,2.949,594,5.726,595,5.726,596,3.353,597,5.54,598,4.055,605,3.55,606,5.417,625,4.863,626,4.047,627,4.047,628,4.047]],["title/classes/CreateUserDto.html",[30,0.186,544,2.244]],["body/classes/CreateUserDto.html",[3,0.087,4,0.087,5,0.059,7,0.232,8,0.012,29,0.156,30,0.303,33,1.841,34,0.007,35,0.007,76,1.272,114,0.341,117,1.014,120,1.221,123,1.929,136,1.835,142,0.84,143,0.981,163,1.646,179,1.822,180,4.413,190,1.33,256,1.232,271,2.721,285,0.75,292,2.1,293,2.555,346,2.387,399,2.051,471,0.75,473,3.793,474,1.911,496,2.203,500,3.829,504,3.426,505,2.581,506,2.581,507,2.581,508,2.581,510,2.94,513,1.383,515,1.646,517,3.259,518,4.081,519,4.034,520,4.034,521,3.849,524,3.256,525,2.721,539,1.929,542,2.721,543,3.938,544,2.457,545,3.938,546,3.985,547,4.2,548,4.2,549,3.29,550,3.29,551,2.88,552,3.29,553,2.204,556,3.66,565,2.643,625,2.643,629,3.025,630,3.025,631,3.025,632,2.643,633,3.025,634,3.025,635,3.025,636,3.025,637,3.025]],["title/controllers/DatabasesController.html",[0,1.162,638,3.006]],["body/controllers/DatabasesController.html",[0,1.731,2,1.731,3,0.178,4,0.178,5,0.119,7,0.282,8,0.012,13,0.901,29,0.178,30,0.277,33,2.507,34,0.01,35,0.01,126,2.929,371,2.812,638,5.301,639,5.373,640,6.148,641,4.942,642,5.373,643,6.148]],["title/modules/DatabasesModule.html",[36,0.96,50,2.801]],["body/modules/DatabasesModule.html",[2,1.78,3,0.142,4,0.142,5,0.095,7,0.313,8,0.013,13,0.718,29,0.142,30,0.221,34,0.009,35,0.009,36,1.63,38,1.997,39,2.073,40,2.24,41,2.24,42,2.073,43,3.2,44,2.24,50,5.488,60,2.891,61,2.24,62,2.24,64,2.24,66,2.544,67,1.379,138,1.424,142,0.82,235,4.071,236,3.569,293,1.795,390,2.665,392,2.854,615,2.154,638,5.099,641,4.999,642,4.28,644,4.28,645,4.28,646,4.898,647,4.898,648,4.292,649,4.28,650,4.292,651,3.873,652,4.031,653,3.326,654,4.28,655,3.873,656,3.569]],["title/injectables/DatabasesService.html",[111,0.819,641,2.631]],["body/injectables/DatabasesService.html",[3,0.094,4,0.094,5,0.063,7,0.289,8,0.013,13,0.474,16,4.071,29,0.094,30,0.146,31,1.866,32,3.212,33,2.292,34,0.007,35,0.007,67,0.911,69,1.849,73,1.607,74,1.146,75,1.607,76,0.911,100,1.862,110,1.38,111,0.942,112,1.185,114,0.364,115,1.295,117,0.795,119,0.882,123,2.063,138,1.38,141,0.971,142,0.856,143,0.425,144,0.911,165,1.572,209,2.139,211,2.732,235,3.216,236,2.357,256,1.295,273,2.063,274,1.949,283,2.357,289,3.425,292,1.583,293,2.526,302,2.827,335,1.634,395,4.124,404,1.76,446,1.76,473,3.059,474,2.008,537,2.713,546,3.059,547,3.387,548,3.387,615,1.422,641,3.027,649,2.827,651,2.558,653,2.197,657,2.827,658,6.192,659,6.893,660,2.827,661,4.912,662,5.621,663,5.621,664,4.746,665,4.147,666,3.235,667,4.746,668,2.357,669,2.197,670,2.357,671,4.096,672,2.558,673,4.096,674,4.746,675,2.197,676,3.235,677,2.827,678,2.558,679,3.235,680,3.235,681,3.235,682,5.621,683,3.235,684,5.621,685,3.235,686,5.621,687,3.235,688,5.022,689,3.235,690,3.235,691,3.235,692,3.235,693,3.753,694,2.827,695,3.235,696,4.746,697,2.827,698,3.235,699,3.235,700,3.235,701,2.827,702,3.235,703,3.235,704,3.235,705,3.235,706,2.827,707,3.235,708,3.235,709,4.746,710,3.235,711,5.621,712,2.827,713,5.621,714,4.746,715,5.621,716,5.621,717,4.746,718,3.235,719,3.235,720,3.235,721,3.235,722,2.827,723,3.235,724,2.558,725,3.235,726,2.197]],["title/classes/File.html",[5,0.08,30,0.186]],["body/classes/File.html",[3,0.188,4,0.188,5,0.154,8,0.011,29,0.188,30,0.293,34,0.011,35,0.011,471,1.615,727,5.69]],["title/controllers/FilesController.html",[0,1.162,728,3.006]],["body/controllers/FilesController.html",[0,1.103,2,1.103,3,0.113,4,0.113,5,0.131,7,0.292,8,0.012,11,1.947,13,0.574,27,2.393,29,0.113,30,0.176,33,1.598,34,0.008,35,0.008,74,1.388,106,1.876,114,0.441,115,1.485,117,1.004,119,1.937,120,1.185,126,1.866,136,1.818,141,2.029,142,0.792,143,0.888,144,1.903,172,2.827,174,1.866,175,1.598,182,2.132,300,2.065,336,2.755,337,2.219,338,2.219,350,1.598,353,2.602,354,1.723,355,3.111,357,1.947,359,3.471,361,2.132,362,2.239,366,1.598,368,1.598,371,1.792,377,3.111,378,2.239,446,2.132,521,1.866,551,2.499,562,2.499,701,3.424,726,2.661,728,3.966,729,3.424,730,3.098,731,6.253,732,3.918,733,3.918,734,3.918,735,5.218,736,3.918,737,3.918,738,6.253,739,3.918,740,4.756,741,3.918,742,4.556,743,3.918,744,4.756,745,3.918,746,5.442,747,3.918,748,3.424,749,3.918,750,3.989,751,3.424,752,4.303,753,3.918,754,2.855,755,3.098,756,3.918,757,3.918,758,3.918,759,3.918,760,3.918,761,3.918,762,3.918,763,3.918,764,3.918,765,3.918,766,3.918,767,3.918,768,3.918,769,3.918,770,3.918]],["title/modules/FilesModule.html",[36,0.96,51,2.801]],["body/modules/FilesModule.html",[2,1.897,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,13,0.794,29,0.157,30,0.244,34,0.01,35,0.01,36,1.707,38,2.209,39,2.293,40,2.477,41,2.477,42,2.293,43,3.353,44,2.477,51,5.463,60,3.081,61,2.477,62,2.477,64,2.477,182,2.948,728,5.343,750,5.131,751,4.734,754,3.947,771,4.734,772,4.734,773,5.417,774,5.417,775,5.417,776,4.909,777,5.417,778,5.417,779,5.417]],["title/injectables/FilesService.html",[111,0.819,750,2.631]],["body/injectables/FilesService.html",[3,0.13,4,0.13,5,0.145,7,0.261,8,0.012,13,0.661,29,0.13,30,0.203,34,0.009,35,0.009,106,1.969,111,1.188,112,1.652,114,0.508,115,1.633,117,1.054,119,2.132,120,1.132,141,2.15,142,0.839,143,0.942,144,2.016,165,1.493,300,2.272,335,1.741,336,2.92,337,2.441,338,2.441,350,2.441,353,2.713,354,2.632,357,2.975,366,1.838,368,1.838,399,3.05,562,4.754,730,3.565,735,5.309,750,3.818,752,4.734,780,3.939,781,5.986,782,4.508,783,4.508,784,4.508,785,4.508,786,4.508,787,7.453,788,4.508,789,4.508,790,4.508]],["title/controllers/HealthController.html",[0,1.162,791,3.006]],["body/controllers/HealthController.html",[0,1.566,2,1.566,3,0.161,4,0.161,5,0.108,7,0.288,8,0.012,13,0.815,27,3.011,29,0.161,30,0.25,31,2.187,32,3.011,34,0.01,35,0.01,106,1.47,114,0.626,115,1.868,117,0.787,119,1.517,126,2.649,136,1.424,175,2.268,791,4.989,792,4.859,793,6.847,794,6.766,795,5.561,796,5.561,797,6.847,798,6.847,799,6.847,800,4.397,801,5.561,802,5.561,803,5.561,804,5.561]],["title/modules/HealthModule.html",[36,0.96,52,2.801]],["body/modules/HealthModule.html",[2,2.031,3,0.175,4,0.175,5,0.118,7,0.299,8,0.012,13,0.888,29,0.175,30,0.273,34,0.01,35,0.01,36,1.679,38,2.471,52,4.898,64,2.771,791,5.611,800,4.791,805,6.059,806,6.059,807,7.212]],["title/classes/HttpExceptionFilter.html",[30,0.186,742,3.006]],["body/classes/HttpExceptionFilter.html",[3,0.147,4,0.147,5,0.126,7,0.251,8,0.012,9,4.131,13,0.746,29,0.147,30,0.229,34,0.009,35,0.009,114,0.573,115,1.767,117,0.72,119,1.388,141,1.528,142,0.597,143,0.669,144,1.433,151,4.293,165,1.685,182,2.769,209,2.252,294,4.023,327,6.226,436,2.769,471,1.262,517,2.075,596,4.293,675,4.398,742,4.719,755,5.121,808,4.446,809,7.125,810,6.477,811,6.554,812,6.226,813,7.5,814,5.088,815,4.446,816,4.023,817,5.088,818,4.446,819,5.088,820,5.088,821,5.088,822,5.088,823,5.088,824,5.088,825,5.121,826,5.088,827,5.088,828,3.246,829,5.088,830,6.477,831,5.088]],["title/interfaces/IUser.html",[135,1.461,832,2.631]],["body/interfaces/IUser.html",[3,0.155,4,0.155,5,0.104,8,0.012,29,0.155,34,0.01,35,0.01,36,1.248,114,0.604,120,1.296,135,2.371,142,0.941,143,1.091,144,1.885,256,1.826,285,1.99,289,3.97,292,2.152,293,2.801,480,4.369,585,3.42,832,3.42,833,4.24,834,4.685]],["title/classes/Job.html",[30,0.186,835,1.965]],["body/classes/Job.html",[3,0.096,4,0.096,5,0.065,7,0.188,8,0.012,29,0.165,30,0.15,34,0.007,35,0.007,67,0.938,76,1.366,110,0.969,114,0.375,117,1.153,120,1.217,136,2.087,142,0.736,143,1.103,209,1.001,256,1.323,285,1.558,292,1.61,313,2.42,346,1.958,392,1.978,399,2.384,413,2.332,465,2.42,466,2.514,467,2.514,468,3.111,469,3.792,471,0.827,474,2.42,475,2.263,476,3.111,477,5.108,480,3.59,481,3.784,482,4.211,487,3.262,493,2.008,494,2.772,495,2.008,496,2.561,529,3.111,530,3.883,531,3.883,532,4.167,533,4.167,534,4.167,536,4.167,537,3.269,835,2.31,836,2.428,837,3.332,838,3.332,839,3.332,840,3.332,841,3.332,842,3.332,843,3.332,844,3.332,845,3.332,846,3.332,847,3.332,848,3.332,849,3.332,850,3.332,851,3.332,852,3.332,853,3.332,854,3.332,855,2.428,856,2.263,857,2.912]],["title/controllers/JobsController.html",[0,1.162,858,3.006]],["body/controllers/JobsController.html",[0,0.955,2,0.955,3,0.098,4,0.098,5,0.066,7,0.28,8,0.012,11,2.441,13,0.497,27,2.54,29,0.098,30,0.153,33,1.383,34,0.007,35,0.007,74,1.201,94,2.68,100,2.321,106,1.776,114,0.382,115,1.34,117,0.951,119,1.833,120,1.241,126,1.616,135,2.713,136,1.721,138,2.395,141,2.018,142,0.788,143,0.884,144,1.893,145,1.932,165,1.627,172,3,174,1.616,175,1.383,183,1.435,188,1.845,190,1.491,211,1.801,285,0.841,300,2.192,313,1.435,335,1.679,336,2.355,337,2.003,338,2.355,342,1.491,343,2.784,344,2.471,345,3.134,347,2.808,349,2.16,350,1.383,353,2.622,354,1.491,355,1.939,357,1.685,359,2.163,361,1.845,362,1.939,363,2.079,366,1.383,368,1.383,371,1.551,373,2.043,374,2.043,375,2.043,377,1.939,378,1.939,381,2.96,516,4.222,835,3.338,858,3.58,859,2.964,860,2.682,861,2.964,862,2.303,863,3.392,864,3.392,865,2.682,866,3.392,867,2.471,868,3.392,869,5.027,870,2.471,871,3.392,872,3.684,873,2.964,874,3.885,875,3.392,876,3.392,877,2.303,878,2.682,879,3.392,880,2.964,881,3.392,882,3.392,883,2.163,884,3.885,885,3.392,886,2.163,887,4.293,888,3.392,889,2.471,890,4.913,891,3.392]],["title/modules/JobsModule.html",[36,0.96,53,2.801]],["body/modules/JobsModule.html",[2,1.864,3,0.152,4,0.152,5,0.102,7,0.304,8,0.012,13,0.772,29,0.152,30,0.237,34,0.01,35,0.01,36,1.686,38,2.148,39,2.229,40,2.409,41,2.409,42,2.229,43,3.311,44,3.311,53,5.506,60,3.028,61,2.409,62,2.409,64,2.409,66,2.736,67,1.483,142,0.618,390,2.866,392,2.148,835,2.509,856,4.496,858,5.275,872,5.372,873,4.603,892,4.603,893,4.603,894,4.603,895,5.267,896,5.267,897,4.603,898,4.165]],["title/injectables/JobsService.html",[111,0.819,872,2.631]],["body/injectables/JobsService.html",[3,0.082,4,0.082,5,0.055,7,0.284,8,0.013,13,0.414,29,0.082,30,0.127,31,1.687,32,1.242,34,0.006,35,0.006,67,0.795,73,1.404,74,1.836,75,1.404,76,1.46,94,2.883,95,1.615,100,2.501,106,1.8,110,0.821,111,0.851,112,1.035,114,0.318,115,1.17,117,0.927,119,1.698,120,1.147,135,2.596,138,2.166,141,1.968,142,0.823,143,0.862,144,1.846,145,2.277,175,1.152,183,1.195,209,1.739,211,2.122,285,1.69,292,1.46,300,1.628,330,2.964,335,1.247,336,1.749,337,1.749,338,1.749,342,1.886,343,2.28,346,1.469,349,2.28,350,1.749,353,2.412,354,1.886,357,2.131,363,2.194,366,1.152,368,1.152,395,3.151,399,2.488,404,1.537,406,1.702,407,1.615,408,1.615,413,1.152,414,3.124,415,1.702,416,1.702,417,1.702,418,1.702,419,1.702,420,1.702,421,1.702,422,1.467,423,2.584,424,2.584,426,2.584,427,1.702,428,2.584,430,1.702,431,1.702,432,1.702,433,1.702,434,1.702,435,1.702,436,1.537,437,1.702,438,1.702,439,1.702,440,1.702,441,1.702,442,2.584,443,1.702,444,1.615,445,1.702,446,3.151,447,1.702,448,2.584,449,2.584,450,1.702,451,1.702,452,2.584,453,1.615,454,1.702,455,1.702,456,1.702,457,1.702,458,1.615,459,1.702,460,1.702,461,2.584,462,2.584,465,1.195,466,1.242,467,1.242,474,1.815,516,3.949,529,2.334,530,2.913,531,2.913,532,3.125,533,3.125,534,3.125,536,3.125,537,2.452,835,2.043,855,2.058,861,3.748,869,4.766,872,2.736,874,3.392,878,3.392,897,2.468,899,2.468,900,2.825,901,2.825,902,3.748,903,2.825,904,2.825,905,2.825,906,2.825,907,2.825,908,2.468,909,2.825,910,2.825,911,2.825,912,2.825,913,4.289,914,4.289,915,2.825]],["title/injectables/JwtAuthGuard.html",[25,2.801,111,0.819]],["body/injectables/JwtAuthGuard.html",[3,0.207,4,0.116,5,0.078,7,0.278,8,0.013,9,4.041,13,0.589,18,3.175,19,2.419,25,3.759,29,0.116,30,0.181,31,1.579,34,0.008,35,0.008,106,1.674,110,1.609,111,1.099,112,1.472,114,0.452,115,1.51,117,0.896,119,1.51,120,0.61,138,2.082,141,1.902,142,0.743,143,0.833,144,1.784,165,1.833,175,1.637,182,2.185,209,2.223,289,2.875,323,3.621,325,3.509,328,5.967,371,1.836,615,1.766,794,3.509,815,3.509,916,5.967,917,3.175,918,5.536,919,5.536,920,3.509,921,5.855,922,4.016,923,5.536,924,5.528,925,4.016,926,4.975,927,5.536,928,4.016,929,4.016,930,3.509,931,2.926,932,3.175,933,3.175,934,1.913,935,4.016,936,3.175,937,4.837,938,4.016,939,4.377,940,5.536,941,4.016,942,4.016,943,5.536,944,4.016,945,4.016,946,4.016,947,4.016,948,5.536,949,4.016,950,5.536,951,4.016,952,4.016,953,4.302,954,4.016,955,4.016,956,4.016,957,4.016,958,4.016,959,4.016,960,4.016,961,4.016]],["title/injectables/JwtStrategy.html",[111,0.819,232,2.801]],["body/injectables/JwtStrategy.html",[3,0.133,4,0.133,5,0.09,7,0.299,8,0.013,13,0.677,16,4.409,19,2.782,29,0.133,30,0.208,31,2.392,32,2.674,34,0.009,35,0.009,69,2.639,100,2.252,106,1.22,111,1.207,112,1.692,114,0.52,115,1.659,117,0.86,119,1.26,120,0.924,135,2.56,141,1.826,142,0.881,143,0.8,144,1.713,145,2.392,178,3.651,183,1.954,184,4.279,185,3.651,209,2.042,210,3.651,211,1.692,232,4.13,283,3.365,285,1.687,289,2.398,290,4.035,292,1.713,293,2.493,294,4.809,934,2.199,936,3.651,962,4.035,963,5.315,964,4.617,965,4.617,966,6.082,967,4.617,968,4.617,969,4.035,970,3.651,971,4.035,972,4.035,973,4.617,974,4.617,975,4.617,976,3.365,977,4.617,978,4.617,979,4.617]],["title/injectables/LocalAuthGuard.html",[20,2.801,111,0.819]],["body/injectables/LocalAuthGuard.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,13,0.912,18,4.919,19,3.748,20,4.975,29,0.18,30,0.28,34,0.011,35,0.011,111,1.454,112,2.28,917,4.919,934,2.963,980,5.436,981,6.221]],["title/injectables/LocalStrategy.html",[111,0.819,233,2.801]],["body/injectables/LocalStrategy.html",[3,0.146,4,0.146,5,0.098,7,0.29,8,0.012,13,0.741,19,3.044,23,4.517,29,0.146,30,0.227,31,1.986,34,0.009,35,0.009,100,2.351,106,1.335,111,1.28,112,1.851,114,0.569,115,1.759,117,0.912,119,1.378,120,1.2,138,2.065,141,1.936,142,0.756,143,0.848,144,1.815,165,1.673,176,3.994,177,3.994,209,1.517,211,1.851,233,4.378,271,3.044,272,5.634,323,2.887,371,2.31,546,4.07,930,4.414,934,2.406,936,3.994,963,5.634,969,4.414,970,3.994,971,4.414,972,4.414,982,4.414,983,5.051,984,5.051,985,6.447,986,5.051,987,5.051,988,5.051,989,5.051]],["title/controllers/MailController.html",[0,1.162,990,3.006]],["body/controllers/MailController.html",[0,1.099,2,1.099,3,0.113,4,0.113,5,0.076,7,0.306,8,0.013,13,0.572,27,2.387,29,0.113,30,0.176,31,1.535,32,2.966,33,2.751,34,0.008,35,0.008,67,1.099,73,1.94,74,1.382,75,1.94,76,1.099,87,3.087,100,2.067,106,1.032,114,0.44,115,1.481,117,0.768,119,1.481,126,1.859,136,0.999,142,0.458,165,1.293,172,2.027,174,1.859,175,1.592,188,2.124,190,1.716,209,2.129,211,2.287,273,2.49,292,1.529,346,1.336,395,3.396,404,2.124,529,2.954,531,2.651,688,5.348,816,3.087,835,2.586,855,2.844,860,4.935,902,3.411,908,3.411,926,2.844,990,3.955,991,3.411,992,3.903,993,6.746,994,6.746,995,3.903,996,3.903,997,3.903,998,3.903,999,3.981,1000,3.411,1001,6.241,1002,2.844,1003,3.087,1004,2.231,1005,2.844,1006,3.411,1007,3.087,1008,3.411,1009,3.903,1010,3.903,1011,3.903,1012,3.411,1013,3.411,1014,3.903,1015,3.903,1016,3.903,1017,3.903,1018,4.743,1019,3.903,1020,3.903,1021,5.428,1022,3.903,1023,3.903,1024,3.903,1025,3.903,1026,3.903,1027,3.903,1028,3.903,1029,3.903,1030,3.903,1031,3.903,1032,3.903,1033,3.903,1034,4.743,1035,3.903,1036,3.903,1037,3.411,1038,3.903,1039,3.903,1040,3.903,1041,3.903,1042,3.903,1043,3.903,1044,3.903,1045,3.903,1046,3.903,1047,3.903,1048,3.903]],["title/modules/MailModule.html",[36,0.96,54,2.801]],["body/modules/MailModule.html",[2,1.669,3,0.128,4,0.128,5,0.086,7,0.314,8,0.013,13,0.651,16,4.069,29,0.128,30,0.2,34,0.009,35,0.009,36,1.553,38,1.811,39,1.88,40,2.031,41,2.031,42,1.88,43,3.051,44,2.031,54,5.181,60,2.711,61,2.031,62,2.031,64,2.031,66,2.307,67,1.251,69,2.539,99,3.512,100,1.471,107,3.512,110,1.94,127,3.881,138,1.291,142,0.695,165,1.471,269,3.881,390,2.417,392,2.417,812,3.881,828,2.833,835,2.115,856,4.025,898,3.512,976,4.319,990,4.861,999,4.866,1000,3.881,1002,4.319,1003,3.512,1004,2.539,1006,3.881,1007,3.512,1034,3.881,1049,3.881,1050,3.881,1051,4.441,1052,4.441,1053,4.441,1054,3.881,1055,5.927,1056,4.441,1057,4.025,1058,4.441,1059,4.441,1060,4.441,1061,4.441,1062,4.441,1063,4.441,1064,3.881,1065,4.441,1066,4.441,1067,4.441,1068,4.441,1069,4.441,1070,4.441,1071,4.441,1072,3.881]],["title/injectables/MailService.html",[111,0.819,999,2.631]],["body/injectables/MailService.html",[3,0.185,4,0.185,5,0.124,7,0.248,8,0.012,13,0.937,29,0.185,30,0.288,34,0.011,35,0.011,111,1.477,112,2.343,999,4.747,1073,5.586]],["title/injectables/MulterConfigService.html",[111,0.819,776,3.006]],["body/injectables/MulterConfigService.html",[3,0.108,4,0.108,5,0.14,7,0.27,8,0.013,13,0.546,29,0.108,30,0.168,34,0.008,35,0.008,106,1.608,110,1.527,111,1.042,112,1.365,114,0.419,115,1.432,117,0.861,119,1.432,120,0.924,141,1.118,142,0.713,143,0.69,144,1.048,149,4.811,182,2.026,209,1.984,256,1.432,273,3.88,274,2.243,291,2.944,331,3.253,335,1.082,422,1.934,436,3.791,530,2.528,615,1.637,675,2.528,724,4.152,744,3.253,748,3.253,754,2.713,776,3.826,811,3.253,816,2.944,828,3.35,1054,3.253,1064,3.253,1074,3.253,1075,6.084,1076,6.607,1077,5.251,1078,3.723,1079,6.084,1080,5.251,1081,3.723,1082,3.723,1083,3.723,1084,5.251,1085,5.251,1086,5.251,1087,3.723,1088,3.723,1089,3.723,1090,3.723,1091,3.723,1092,3.723,1093,4.589,1094,3.723,1095,3.723,1096,5.251,1097,3.723,1098,3.723,1099,3.723,1100,3.723,1101,6.084,1102,3.723,1103,3.723,1104,3.723,1105,3.723,1106,3.723,1107,3.723,1108,3.723,1109,3.723,1110,3.723,1111,3.723,1112,3.723,1113,6.084,1114,3.723,1115,3.723,1116,3.723,1117,6.084,1118,3.723,1119,3.723,1120,3.723,1121,5.251,1122,5.251,1123,3.723,1124,3.723,1125,3.723,1126,5.251,1127,3.723,1128,5.251,1129,3.723,1130,3.723,1131,3.723,1132,3.723,1133,3.723,1134,3.723,1135,3.723,1136,3.723,1137,3.723,1138,3.723,1139,3.723,1140,3.723,1141,5.251,1142,3.723,1143,3.723,1144,3.723,1145,3.723,1146,3.723,1147,3.723,1148,5.251,1149,3.723]],["title/classes/Permission.html",[30,0.186,615,1.814]],["body/classes/Permission.html",[3,0.115,4,0.115,5,0.077,7,0.214,8,0.012,29,0.182,30,0.179,34,0.008,35,0.008,36,1.469,67,1.122,76,1.551,110,1.159,114,0.449,117,1.133,120,1.216,136,2.05,142,0.74,143,1.096,209,1.197,256,1.502,285,1.565,292,1.777,313,2.67,392,2.245,413,2.573,465,2.67,466,2.774,467,2.774,468,3.433,469,3.671,471,0.989,476,3.433,477,5.055,480,3.606,481,3.802,482,4.222,487,2.86,493,2.401,494,3.148,495,2.401,496,2.573,585,4.025,586,4.285,615,2.421,650,2.706,668,2.904,1150,2.904,1151,3.985,1152,3.985,1153,3.985,1154,3.985,1155,3.985,1156,3.985,1157,3.985,1158,3.985,1159,3.985,1160,3.985,1161,3.985,1162,3.482]],["title/controllers/PermissionsController.html",[0,1.162,1163,3.006]],["body/controllers/PermissionsController.html",[0,0.957,2,0.957,3,0.098,4,0.098,5,0.066,7,0.281,8,0.012,11,2.444,13,0.498,27,2.163,29,0.098,30,0.153,33,1.385,34,0.007,35,0.007,74,1.203,94,2.682,100,2.499,106,1.777,114,0.383,115,1.342,117,0.951,119,1.835,120,1.241,126,1.618,135,2.714,136,1.722,138,2.351,141,2.019,142,0.788,143,0.884,144,1.894,145,2.273,172,3.003,174,1.618,175,1.385,183,1.438,188,1.848,190,1.494,211,2.119,285,0.843,289,1.764,300,2.194,313,1.438,335,1.681,336,2.358,337,2.006,338,2.358,342,1.494,343,2.786,345,3.137,347,2.811,349,2.163,350,1.385,353,2.623,354,1.494,355,1.942,357,1.688,359,2.167,361,1.848,362,1.942,363,2.082,366,1.385,368,1.385,371,1.554,373,2.047,374,2.047,375,2.047,377,1.942,378,1.942,381,2.963,582,4.473,615,3.37,862,2.307,870,2.475,877,2.307,883,2.167,886,2.167,1163,3.584,1164,2.969,1165,2.969,1166,3.397,1167,2.686,1168,3.397,1169,2.686,1170,3.397,1171,2.969,1172,3.397,1173,5.029,1174,3.397,1175,3.688,1176,2.969,1177,3.889,1178,3.397,1179,3.397,1180,2.969,1181,3.397,1182,3.397,1183,3.397,1184,3.397,1185,4.919,1186,3.397,1187,3.889,1188,3.397,1189,2.969,1190,3.397]],["title/modules/PermissionsModule.html",[36,0.96,55,2.801]],["body/modules/PermissionsModule.html",[2,1.897,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,13,0.794,29,0.157,30,0.244,34,0.01,35,0.01,36,1.707,38,2.209,39,2.293,40,2.477,41,2.477,42,2.293,43,3.353,44,2.477,55,5.463,60,3.081,61,2.477,62,2.477,64,2.477,66,2.814,67,1.525,142,0.635,390,2.948,392,2.209,615,2.382,650,4.575,655,4.284,1163,5.343,1175,5.131,1176,4.734,1191,4.734,1192,4.734,1193,5.417,1194,5.417,1195,4.734]],["title/injectables/PermissionsService.html",[111,0.819,1175,2.631]],["body/injectables/PermissionsService.html",[3,0.08,4,0.08,5,0.054,7,0.278,8,0.013,13,0.408,29,0.08,30,0.125,31,1.666,32,1.222,34,0.006,35,0.006,36,1.196,67,0.783,73,1.381,74,1.818,75,1.381,76,1.446,94,2.867,95,1.589,100,2.492,106,1.634,110,0.808,111,0.841,112,1.019,114,0.313,115,1.156,117,0.922,119,1.686,120,1.143,135,2.585,138,2.08,141,1.956,142,0.819,143,0.857,144,1.834,145,2.258,165,1.902,183,1.176,209,1.856,211,2.266,278,1.773,285,1.775,292,1.446,300,1.608,323,3.282,330,2.935,335,1.232,336,1.728,337,1.728,338,1.728,342,1.863,343,2.258,349,2.258,350,1.728,353,1.501,363,2.173,366,1.133,368,1.133,395,3.125,399,2.472,404,1.513,406,1.675,407,1.589,408,1.589,413,1.133,414,3.094,415,1.675,416,1.675,417,1.675,418,1.675,419,1.675,420,1.675,421,1.675,422,1.444,423,2.553,424,2.553,426,2.553,427,1.675,428,2.553,430,1.675,431,1.675,432,1.675,433,1.675,434,1.675,435,1.675,436,1.513,437,1.675,438,1.675,439,1.675,440,1.675,441,1.675,442,2.553,443,1.675,444,1.589,445,1.675,446,3.125,447,1.675,448,2.553,449,2.553,450,1.675,451,1.675,452,2.553,453,1.589,454,1.675,455,1.675,456,1.675,457,1.675,458,1.589,459,1.675,460,1.675,461,1.675,462,3.094,465,1.176,466,1.222,467,1.222,582,4.155,585,3.943,586,3.9,615,2.525,661,3.703,668,2.026,677,2.429,953,2.878,1165,3.703,1173,4.742,1175,2.703,1177,3.351,1180,3.703,1187,3.351,1195,2.429,1196,2.429,1197,2.78,1198,2.78,1199,2.78,1200,2.78,1201,2.78,1202,3.703,1203,2.78,1204,4.237,1205,2.78,1206,4.237,1207,2.78,1208,2.198,1209,2.78,1210,2.78,1211,2.78,1212,4.487,1213,3.703,1214,4.237,1215,2.78]],["title/classes/RegisterUserDto.html",[30,0.186,163,2.244]],["body/classes/RegisterUserDto.html",[3,0.092,4,0.092,5,0.061,7,0.238,8,0.012,29,0.161,30,0.308,33,1.905,34,0.007,35,0.007,76,1.316,114,0.357,117,0.968,120,1.229,123,2.02,136,1.751,142,0.851,143,0.955,163,2.542,179,1.908,180,4.263,190,1.392,256,1.274,271,2.815,285,0.785,292,2.123,293,2.035,346,2.099,399,2.107,471,0.785,473,3.85,474,1.977,496,1.905,500,3.855,504,3.503,505,2.67,506,2.67,507,2.67,508,2.67,510,3.021,513,1.448,515,1.723,517,3.282,518,4.089,519,4.041,520,4.041,521,3.873,524,3.345,525,2.815,539,2.02,542,2.815,543,4.045,544,1.723,545,4.045,546,4.034,547,4.263,548,4.263,549,2.307,550,2.307,551,2.02,552,3.404,553,2.307,556,3.557,632,2.767,1216,3.166,1217,3.166,1218,3.166,1219,3.166,1220,3.166,1221,3.166]],["title/interfaces/Response.html",[151,2.485,832,2.631]],["body/interfaces/Response.html",[3,0.144,4,0.144,5,0.097,7,0.299,8,0.013,13,0.732,29,0.185,30,0.225,34,0.009,35,0.009,106,1.319,111,1.27,114,0.562,120,1.072,143,0.928,144,1.802,151,3.855,175,2.035,256,1.745,371,2.283,399,2.68,517,3.14,675,3.39,726,5.35,825,6.088,832,3.184,833,3.947,921,5.583,924,4.662,926,3.637,931,3.637,939,3.947,1222,3.947,1223,5.591,1224,5.591,1225,5.591,1226,3.947,1227,4.362,1228,4.362,1229,3.637,1230,3.637,1231,4.362,1232,5.591,1233,4.362,1234,4.362,1235,4.362,1236,4.362,1237,4.362]],["title/classes/Resume.html",[30,0.186,1238,2.485]],["body/classes/Resume.html",[3,0.1,4,0.1,5,0.067,7,0.248,8,0.012,29,0.169,30,0.155,34,0.007,35,0.007,67,0.971,76,1.4,110,1.002,114,0.388,117,1.132,120,1.183,136,2.049,143,1.101,209,1.035,256,1.356,285,1.583,292,2.046,313,2.467,346,1.18,391,3.013,392,2.027,413,2.377,465,2.7,466,2.563,467,2.563,468,3.172,469,3.61,471,0.855,476,3.472,477,5.021,480,3.647,481,4.246,482,4.028,487,2.582,493,2.077,494,2.841,495,2.077,496,3.209,594,4.248,595,4.248,596,3.845,597,4.248,598,4.248,835,1.642,898,2.726,1007,2.726,1238,2.995,1239,2.512,1240,5.094,1241,5.349,1242,5.046,1243,3.447,1244,3.447,1245,3.447,1246,3.447,1247,3.447,1248,3.447,1249,3.447,1250,3.447,1251,3.447,1252,3.447,1253,3.447,1254,3.447,1255,3.447,1256,3.447,1257,3.447,1258,2.726,1259,3.447,1260,2.512,1261,3.013]],["title/controllers/ResumesController.html",[0,1.162,1262,3.006]],["body/controllers/ResumesController.html",[0,0.9,2,0.9,3,0.092,4,0.092,5,0.062,7,0.275,8,0.012,11,2.337,13,0.468,27,2.454,29,0.092,30,0.144,33,1.303,34,0.007,35,0.007,74,1.132,94,2.605,100,2.273,106,1.814,114,0.36,115,1.283,117,0.971,119,1.872,120,1.247,126,1.522,135,2.773,136,1.757,137,2.527,138,2.395,141,2.061,142,0.805,143,0.902,144,1.933,145,1.849,165,1.558,172,2.443,174,1.522,175,1.303,183,1.352,188,1.739,190,1.405,211,1.724,285,0.793,300,2.118,313,1.352,335,1.623,336,2.276,337,1.918,338,2.276,342,1.405,343,2.707,344,2.328,345,3,347,2.688,349,2.068,350,1.303,353,2.578,354,1.405,355,1.826,357,1.588,359,2.038,361,1.739,362,1.826,363,1.99,366,1.303,368,1.303,371,1.461,373,1.925,374,1.925,375,1.925,377,1.826,378,1.826,381,2.834,591,1.925,596,4.135,605,4.377,835,2.24,862,2.17,865,2.527,867,2.328,870,2.328,877,2.17,883,2.038,886,2.038,887,4.11,889,2.328,1238,4.135,1262,3.427,1263,2.792,1264,4.877,1265,5.581,1266,2.792,1267,3.195,1268,3.195,1269,3.195,1270,3.195,1271,4.703,1272,3.195,1273,4.703,1274,3.195,1275,3.195,1276,3.195,1277,3.56,1278,2.792,1279,3.719,1280,2.17,1281,3.195,1282,3.195,1283,2.792,1284,3.195,1285,3.195,1286,3.195,1287,3.195,1288,3.195,1289,4.703,1290,3.195,1291,3.195,1292,3.195,1293,4.703,1294,3.195]],["title/modules/ResumesModule.html",[36,0.96,56,2.801]],["body/modules/ResumesModule.html",[2,1.897,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,13,0.794,29,0.157,30,0.244,34,0.01,35,0.01,36,1.707,38,2.209,39,2.293,40,2.477,41,2.477,42,2.293,43,3.353,44,2.477,56,5.463,60,3.081,61,2.477,62,2.477,64,2.477,66,2.814,67,1.525,142,0.635,390,2.948,392,2.209,1238,3.264,1260,4.909,1262,5.343,1277,5.131,1278,4.734,1295,4.734,1296,4.734,1297,5.417,1298,5.417,1299,4.734,1300,5.417]],["title/injectables/ResumesService.html",[111,0.819,1277,2.631]],["body/injectables/ResumesService.html",[3,0.073,4,0.073,5,0.049,7,0.27,8,0.013,13,0.369,29,0.073,30,0.113,31,1.544,32,1.108,34,0.006,35,0.006,67,0.709,73,1.252,74,1.71,75,1.252,76,1.359,94,2.767,95,1.44,100,2.586,106,1.787,110,0.732,111,0.78,112,0.923,114,0.284,115,1.071,117,0.925,119,1.708,120,1.157,135,2.64,138,2.066,141,1.963,142,0.815,143,0.86,144,1.841,145,2.462,165,1.599,183,1.066,209,1.637,211,2.295,278,1.607,285,1.724,292,1.763,300,1.491,313,1.066,323,1.44,330,3.737,335,1.142,336,1.601,337,1.601,338,1.601,342,1.727,343,2.122,349,2.122,350,1.601,353,2.316,354,1.727,357,1.952,363,2.043,366,1.027,368,1.027,395,2.966,399,2.376,404,1.371,406,1.518,407,1.44,408,1.44,413,1.027,414,3.772,415,1.518,416,2.366,417,1.518,418,1.518,419,1.518,420,1.518,421,1.518,422,2.507,423,2.366,424,2.366,426,2.366,427,1.518,428,2.366,430,1.518,431,1.518,432,1.518,433,1.518,434,1.518,435,1.518,436,1.371,437,1.518,438,1.518,439,1.518,440,1.518,441,1.518,442,2.366,443,1.518,444,1.44,445,1.518,446,2.966,447,1.518,448,2.366,449,2.366,450,1.518,451,1.518,452,2.366,453,1.44,454,1.518,455,1.518,456,1.518,457,1.518,458,1.44,459,1.518,460,1.518,461,2.908,462,2.908,465,2.043,466,1.108,467,1.108,469,1.952,476,2.137,591,1.518,594,3.517,595,3.517,596,4.075,597,2.862,598,2.862,605,3.994,828,2.505,1238,3.284,1240,3.432,1258,1.992,1266,3.432,1277,2.505,1279,3.106,1280,1.711,1283,3.432,1299,2.201,1301,2.201,1302,3.927,1303,2.519,1304,2.519,1305,3.927,1306,2.519,1307,2.519,1308,3.927,1309,2.519,1310,2.519,1311,2.519,1312,2.519,1313,2.519,1314,2.519,1315,3.927,1316,2.519,1317,2.519,1318,2.519,1319,2.519,1320,2.519,1321,2.519,1322,3.927,1323,3.927,1324,2.519,1325,2.519,1326,2.519,1327,1.992,1328,3.106]],["title/classes/Role.html",[30,0.186,293,1.512]],["body/classes/Role.html",[3,0.112,4,0.112,5,0.075,7,0.242,8,0.012,29,0.18,30,0.175,34,0.008,35,0.008,67,1.095,76,1.525,110,1.131,114,0.438,117,1.128,120,1.142,136,2.041,142,0.73,143,1.097,209,1.168,256,1.477,285,1.545,289,3.235,292,1.754,293,1.984,313,2.636,392,2.208,413,2.54,465,2.636,466,2.738,467,2.738,468,3.389,469,3.643,471,0.965,474,2.636,476,3.389,477,5.025,480,3.56,481,4.058,482,4.19,487,3.498,493,2.343,494,3.095,495,2.343,496,2.746,537,3.56,615,2.738,651,3.075,652,2.481,655,3.075,669,2.641,1241,4.281,1242,4.281,1329,2.834,1330,3.889,1331,3.889,1332,3.889,1333,3.889,1334,3.889,1335,3.889,1336,3.889,1337,3.889,1338,3.889,1339,3.889,1340,3.889,1341,3.398]],["title/controllers/RolesController.html",[0,1.162,1342,3.006]],["body/controllers/RolesController.html",[0,0.974,2,0.974,3,0.1,4,0.1,5,0.067,7,0.282,8,0.012,11,2.902,13,0.507,27,2.191,29,0.1,30,0.156,33,1.41,34,0.007,35,0.007,74,1.225,94,2.705,100,2.336,106,1.79,114,0.39,115,1.359,117,0.958,119,1.848,120,1.244,126,1.648,135,2.725,136,1.734,138,2.358,141,2.034,142,0.794,143,0.891,144,1.907,145,1.959,172,3.034,174,1.648,175,1.41,183,1.464,184,3.178,188,1.882,190,1.521,211,1.826,285,0.858,293,1.826,300,2.217,313,1.464,335,1.698,336,2.382,337,2.032,338,2.382,342,1.521,343,2.81,347,2.848,349,2.191,350,1.41,353,2.636,354,1.521,355,1.977,357,1.719,359,2.206,361,1.882,362,1.977,363,2.109,366,1.41,368,1.41,371,1.582,373,2.084,374,2.084,375,2.084,377,1.977,378,1.977,381,3.002,607,4.5,615,3.272,870,2.52,883,2.206,886,2.206,1167,2.735,1169,2.735,1171,3.022,1187,3.94,1189,3.022,1342,3.631,1343,3.022,1344,3.022,1345,3.022,1346,3.459,1347,3.459,1348,3.459,1349,3.459,1350,5.054,1351,3.459,1352,3.022,1353,3.94,1354,3.459,1355,3.459,1356,3.022,1357,3.459,1358,3.459,1359,3.459,1360,3.459,1361,3.459,1362,3.459,1363,3.459]],["title/modules/RolesModule.html",[36,0.96,57,2.631]],["body/modules/RolesModule.html",[2,1.864,3,0.152,4,0.152,5,0.102,7,0.304,8,0.012,13,0.772,29,0.152,30,0.237,34,0.01,35,0.01,36,1.686,38,2.148,39,2.229,40,2.409,41,2.409,42,2.229,43,3.311,44,3.311,57,5.171,60,3.028,61,2.409,62,2.409,64,2.409,66,2.736,67,1.483,142,0.618,184,4.583,293,1.931,390,2.866,392,2.148,652,4.223,656,3.838,1342,5.275,1352,4.603,1364,4.603,1365,4.603,1366,4.603,1367,5.267,1368,5.267,1369,4.603]],["title/injectables/RolesService.html",[111,0.819,184,2.244]],["body/injectables/RolesService.html",[3,0.076,4,0.076,5,0.051,7,0.279,8,0.013,13,0.387,29,0.076,30,0.119,31,1.601,32,1.161,34,0.006,35,0.006,36,0.615,67,0.743,73,1.312,74,1.761,75,1.312,76,1.4,94,2.815,95,1.509,100,2.547,106,1.596,110,0.767,111,0.808,112,0.967,114,0.297,115,1.111,117,0.903,119,1.647,120,1.129,135,2.549,138,2.049,141,1.916,142,0.872,143,0.839,144,1.797,145,2.375,165,2,183,1.117,184,2.216,209,1.997,211,2.517,278,1.684,285,1.704,289,2.583,292,1.4,293,2.213,300,1.546,323,3.452,330,2.842,335,1.184,336,1.661,337,1.661,338,2.027,342,1.791,343,2.186,349,2.186,350,1.661,353,1.761,357,2.024,363,2.104,366,1.076,368,1.076,395,3.041,399,2.422,404,1.436,406,1.59,407,1.509,408,1.509,413,1.076,414,2.996,415,1.59,416,1.59,417,1.59,418,1.59,419,1.59,420,1.59,421,1.59,422,3.315,423,2.454,424,2.454,426,2.454,427,1.59,428,2.454,430,1.59,431,1.59,432,1.59,433,1.59,434,1.59,435,1.59,436,1.436,437,1.59,438,1.59,439,1.59,440,1.59,441,1.59,442,2.454,443,1.59,444,1.509,445,1.59,446,3.041,447,1.59,448,2.454,449,2.454,450,1.59,451,1.59,452,2.454,453,1.509,454,1.59,455,1.59,456,1.59,457,1.59,458,1.509,459,1.59,460,1.59,461,2.454,462,2.996,465,1.117,466,1.161,467,1.161,474,1.724,537,2.328,585,1.684,586,1.793,607,4.071,669,1.793,671,2.967,678,2.087,693,2.087,724,2.087,828,1.684,953,2.766,1093,2.307,1202,3.559,1212,4.345,1213,2.307,1327,2.087,1328,2.087,1345,3.559,1350,4.665,1353,3.22,1356,3.559,1369,2.307,1370,2.307,1371,2.64,1372,2.64,1373,3.559,1374,2.64,1375,2.64,1376,2.64,1377,2.64,1378,2.64,1379,2.307,1380,2.64,1381,2.64,1382,2.64,1383,2.64,1384,2.64,1385,2.64,1386,4.073,1387,4.073,1388,2.64,1389,2.64,1390,2.64,1391,2.64,1392,2.64]],["title/classes/Subscriber.html",[30,0.186,1004,2.358]],["body/classes/Subscriber.html",[3,0.118,4,0.118,5,0.079,7,0.217,8,0.012,29,0.185,30,0.184,34,0.008,35,0.008,67,1.151,76,1.578,110,1.188,114,0.46,117,1.127,120,1.196,136,2.04,142,0.749,143,1.095,209,1.227,256,1.528,285,1.586,292,2.096,313,2.706,392,2.284,413,2.607,465,2.706,466,2.811,467,2.811,468,3.479,469,3.699,471,1.014,476,3.479,477,5.037,480,3.654,481,3.852,482,4.255,487,2.91,493,2.462,494,3.202,495,2.462,496,2.607,529,3.479,1004,3.202,1005,2.977,1057,2.775,1393,2.977,1394,4.086,1395,4.086,1396,4.086,1397,4.086,1398,4.086,1399,4.086,1400,4.086,1401,4.086,1402,4.086,1403,4.086,1404,3.571]],["title/controllers/SubscribersController.html",[0,1.162,1405,3.006]],["body/controllers/SubscribersController.html",[0,0.917,2,0.917,3,0.094,4,0.094,5,0.063,7,0.277,8,0.012,11,2.369,13,0.477,27,2.48,29,0.094,30,0.147,33,1.327,34,0.007,35,0.007,74,1.153,94,2.628,100,2.288,106,1.825,114,0.367,115,1.3,117,0.977,119,1.884,120,1.212,126,1.55,135,2.783,136,1.769,137,2.574,138,2.383,141,2.074,142,0.81,143,0.908,144,1.945,145,1.875,165,1.579,172,2.93,174,1.55,175,1.327,183,1.377,188,1.771,190,1.431,211,1.747,285,0.807,300,2.141,335,1.64,336,2.3,337,1.944,338,2.3,342,1.431,343,2.731,344,2.372,345,3.041,347,2.725,349,2.096,350,1.327,353,2.446,354,1.431,355,1.86,361,2.594,362,1.86,363,2.018,366,1.327,368,1.327,371,1.488,373,1.961,374,1.961,375,1.961,377,1.86,378,1.86,381,1.961,413,1.327,529,1.771,619,4.406,862,2.21,865,2.574,867,2.372,877,2.21,878,2.574,880,2.844,883,2.076,886,2.076,889,2.372,1004,4.338,1018,2.844,1405,3.474,1406,2.844,1407,4.767,1408,2.844,1409,3.255,1410,3.255,1411,3.255,1412,3.255,1413,3.255,1414,3.255,1415,3.255,1416,3.255,1417,2.844,1418,4.691,1419,3.255,1420,3.255,1421,3.598,1422,2.844,1423,3.77,1424,4.461,1425,3.255,1426,3.255,1427,3.255,1428,3.255,1429,3.255,1430,3.255,1431,3.255,1432,3.255,1433,4.767,1434,3.255,1435,4.166,1436,3.255,1437,4.767,1438,3.255]],["title/modules/SubscribersModule.html",[36,0.96,58,2.801]],["body/modules/SubscribersModule.html",[2,1.897,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,13,0.794,29,0.157,30,0.244,34,0.01,35,0.01,36,1.707,38,2.209,39,2.293,40,2.477,41,2.477,42,2.293,43,3.353,44,2.477,58,5.463,60,3.081,61,2.477,62,2.477,64,2.477,66,2.814,67,1.525,142,0.635,390,2.948,392,2.209,1004,3.096,1057,4.575,1072,4.734,1405,5.343,1421,5.131,1422,4.734,1439,4.734,1440,4.734,1441,5.417,1442,5.417,1443,4.734]],["title/injectables/SubscribersService.html",[111,0.819,1421,2.631]],["body/injectables/SubscribersService.html",[3,0.08,4,0.08,5,0.053,7,0.277,8,0.013,13,0.404,29,0.08,30,0.124,31,1.654,32,1.211,34,0.006,35,0.006,67,0.776,73,1.369,74,1.808,75,1.369,76,1.438,94,2.858,95,1.574,100,2.487,106,1.84,110,0.801,111,0.835,112,1.009,114,0.31,115,1.148,117,0.955,119,1.771,120,1.084,135,2.692,138,2.153,141,2.027,142,0.837,143,0.888,144,1.901,145,2.247,165,0.912,183,1.166,209,1.949,211,2.379,278,1.757,285,1.61,292,1.961,300,1.597,316,2.178,323,1.574,330,2.918,335,1.223,336,1.716,337,1.716,338,1.716,342,1.85,343,2.245,349,2.245,350,1.716,353,2.18,354,1.85,363,2.161,366,1.123,368,1.123,395,3.11,399,2.463,404,1.499,406,1.659,407,1.574,408,1.574,413,1.123,414,3.709,415,1.659,416,1.659,417,1.659,418,1.659,419,1.659,420,1.659,421,1.659,422,1.431,423,2.535,424,2.535,426,2.535,427,1.659,428,2.535,430,1.659,431,1.659,432,1.659,433,1.659,434,1.659,435,1.659,436,1.499,437,1.659,438,1.659,439,1.659,440,1.659,441,1.659,442,2.535,443,1.659,444,1.574,445,1.659,446,3.11,447,1.659,448,2.535,449,2.535,450,1.659,451,1.659,452,2.535,453,1.574,454,1.659,455,1.659,456,1.659,457,1.659,458,1.574,459,1.659,460,1.659,461,2.535,462,2.535,465,1.166,466,1.211,529,2.289,619,4.14,835,1.312,953,2.857,1004,1.574,1005,2.007,1012,2.407,1013,3.677,1208,2.178,1408,3.677,1417,3.677,1418,4.408,1421,2.684,1423,3.327,1435,3.677,1443,2.407,1444,2.407,1445,4.207,1446,2.754,1447,2.754,1448,2.754,1449,2.754,1450,2.754,1451,4.207,1452,2.754,1453,2.754,1454,2.754,1455,5.105,1456,2.407,1457,2.407,1458,2.407,1459,4.207,1460,2.754,1461,2.754,1462,2.754,1463,4.207,1464,2.754,1465,2.754]],["title/injectables/TransformInterceptor.html",[111,0.819,1230,3.006]],["body/injectables/TransformInterceptor.html",[3,0.141,4,0.141,5,0.094,7,0.296,8,0.012,13,0.713,29,0.182,30,0.219,31,1.913,34,0.009,35,0.009,106,1.285,111,1.249,112,1.783,114,0.548,115,1.716,117,0.89,119,1.327,120,0.739,141,1.889,142,0.738,143,0.827,144,1.772,151,2.93,175,1.983,371,2.224,399,1.846,517,2.566,675,3.303,726,4.737,825,4.975,832,3.102,920,4.25,921,6.186,924,5.374,926,4.585,931,3.544,939,3.846,1222,3.846,1223,5.498,1224,6.444,1225,6.095,1226,3.846,1227,4.25,1228,4.25,1229,3.544,1230,4.585,1231,6.095,1232,6.444,1233,4.25,1234,4.25,1235,4.25,1236,4.25,1237,4.25,1466,4.864,1467,4.864,1468,4.864]],["title/classes/UpdateCompanyDto.html",[30,0.186,358,2.801]],["body/classes/UpdateCompanyDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,340,3.968,358,4.975,367,4.919,471,1.543,555,4.919,934,2.963,1469,5.436,1470,3.556,1471,3.385,1472,3.385,1473,6.221]],["title/classes/UpdateFileDto.html",[30,0.186,735,2.801]],["body/classes/UpdateFileDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,471,1.543,562,3.968,564,4.919,735,4.975,752,4.919,934,2.963,1470,3.556,1471,3.385,1472,3.385,1474,5.436,1475,6.221]],["title/classes/UpdateJobDto.html",[30,0.186,869,2.801]],["body/classes/UpdateJobDto.html",[3,0.179,4,0.179,5,0.12,7,0.284,8,0.012,29,0.179,30,0.279,34,0.011,35,0.011,335,1.803,471,1.539,499,4.52,516,3.737,869,4.966,874,4.905,934,2.955,1470,3.545,1471,3.375,1472,3.375,1476,5.42,1477,6.203]],["title/classes/UpdatePermissionDto.html",[30,0.186,1173,2.801]],["body/classes/UpdatePermissionDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,471,1.543,582,3.968,584,4.919,934,2.963,1173,4.975,1177,4.919,1470,3.556,1471,3.385,1472,3.385,1478,5.436,1479,6.221]],["title/classes/UpdateResumeDto.html",[30,0.186,1280,2.801]],["body/classes/UpdateResumeDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,471,1.543,591,3.748,593,4.533,934,2.963,1279,4.919,1280,4.975,1470,3.556,1471,3.385,1472,3.385,1480,5.436,1481,6.221]],["title/classes/UpdateRoleDto.html",[30,0.186,1350,2.801]],["body/classes/UpdateRoleDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,471,1.543,607,3.968,609,4.919,934,2.963,1350,4.975,1353,4.919,1470,3.556,1471,3.385,1472,3.385,1482,5.436,1483,6.221]],["title/classes/UpdateSubscriberDto.html",[30,0.186,1418,2.801]],["body/classes/UpdateSubscriberDto.html",[3,0.18,4,0.18,5,0.121,7,0.284,8,0.012,29,0.18,30,0.28,34,0.011,35,0.011,335,1.809,471,1.543,619,3.968,621,4.919,934,2.963,1418,4.975,1423,4.919,1470,3.556,1471,3.385,1472,3.385,1484,5.436,1485,6.221]],["title/classes/UpdateUserDto.html",[30,0.186,1486,2.801]],["body/classes/UpdateUserDto.html",[3,0.171,4,0.171,5,0.115,7,0.276,8,0.012,29,0.171,30,0.267,34,0.01,35,0.01,114,0.667,117,0.838,120,1.08,143,0.779,181,4.022,209,1.778,256,1.941,285,1.892,335,1.722,471,1.469,539,3.778,544,3.222,546,3.222,934,2.821,1470,3.385,1471,3.222,1472,3.222,1486,4.831,1487,6.217,1488,5.922,1489,5.922,1490,5.922]],["title/classes/User.html",[30,0.186,138,1.199]],["body/classes/User.html",[3,0.097,4,0.097,5,0.065,7,0.223,8,0.012,29,0.166,30,0.152,34,0.007,35,0.007,67,0.949,76,1.377,110,1.949,114,0.38,117,1.143,120,1.227,136,2.068,138,1.422,142,0.675,143,1.102,209,1.012,217,4.194,256,1.334,285,1.566,292,2.031,293,2.314,313,2.436,346,1.97,392,1.994,399,1.856,413,2.347,465,2.436,466,2.53,467,2.53,468,3.131,469,3.475,471,0.836,473,3.131,476,3.131,477,5.048,480,3.609,481,4.039,482,4.224,487,2.54,493,2.03,494,2.795,495,2.03,496,2.942,546,3.131,547,3.467,548,3.467,648,2.288,653,2.288,656,2.455,670,2.455,1241,3.867,1242,3.867,1491,2.455,1492,3.37,1493,3.37,1494,3.37,1495,3.37,1496,3.37,1497,3.37,1498,3.37,1499,4.89,1500,3.37,1501,3.37,1502,3.37,1503,3.37,1504,3.37,1505,3.37,1506,3.37,1507,3.37,1508,3.37,1509,4.89,1510,2.945]],["title/classes/UserLoginDto.html",[30,0.186,179,2.485]],["body/classes/UserLoginDto.html",[3,0.102,4,0.102,5,0.069,7,0.251,8,0.012,29,0.171,30,0.32,33,2.9,34,0.007,35,0.007,76,1.427,114,0.399,117,0.717,120,1.229,123,3.232,136,1.297,142,0.801,143,0.849,163,1.927,179,3.053,180,3.565,190,1.557,256,1.382,271,4.118,285,0.878,292,2.002,293,2.169,346,2.212,399,1.923,471,0.878,473,3.515,474,2.734,496,2.066,500,3.913,504,3.382,505,2.896,506,2.896,507,2.896,508,2.896,510,3.22,513,1.619,515,1.927,517,3.318,518,4.02,519,3.964,520,3.964,521,3.8,524,3.053,525,3.053,539,2.258,542,3.053,543,4.312,544,1.927,545,3.692,546,4.148,547,3.892,548,3.892,549,2.58,550,2.58,551,2.258,552,3.692,553,3.692,1511,5.067,1512,3.541,1513,3.541]],["title/controllers/UsersController.html",[0,1.162,1514,3.006]],["body/controllers/UsersController.html",[0,0.961,2,0.961,3,0.099,4,0.099,5,0.066,7,0.281,8,0.012,11,2.453,13,0.501,27,2.17,29,0.099,30,0.154,33,1.392,34,0.007,35,0.007,74,1.209,94,2.688,100,2.502,106,1.781,114,0.385,115,1.346,117,0.953,119,1.838,120,1.222,126,1.626,135,2.717,136,1.725,138,2.439,141,2.023,142,0.79,143,0.886,144,1.898,145,2.28,165,1.635,172,3.011,174,1.626,175,1.392,181,3.352,188,1.857,190,1.501,211,2.125,235,3.011,285,0.847,300,2.2,310,2.699,312,2.983,313,1.445,314,2.983,335,1.686,336,2.364,337,2.013,338,2.364,342,1.501,343,2.793,345,3.148,347,2.821,349,2.17,350,1.392,353,2.487,354,1.501,355,1.951,361,2.686,362,1.951,363,2.089,366,1.392,368,1.392,371,1.561,373,2.057,374,2.057,375,2.057,377,1.951,378,1.951,381,2.057,544,3.822,862,2.318,867,2.487,877,2.318,883,2.177,884,3.903,886,2.177,889,2.487,1167,2.699,1169,2.699,1486,4.77,1514,3.597,1515,2.983,1516,2.983,1517,2.983,1518,3.414,1519,3.414,1520,3.414,1521,3.414,1522,2.983,1523,3.414,1524,3.414,1525,2.983,1526,2.983,1527,3.414,1528,3.414,1529,3.414,1530,3.414,1531,3.414,1532,4.313,1533,3.414,1534,4.936,1535,3.414]],["title/modules/UsersModule.html",[36,0.96,59,2.631]],["body/modules/UsersModule.html",[2,1.824,3,0.147,4,0.147,5,0.099,7,0.307,8,0.012,13,0.746,29,0.147,30,0.229,34,0.009,35,0.009,36,1.659,38,2.075,39,2.153,40,2.327,41,2.327,42,2.153,43,3.258,44,3.258,59,5.131,60,2.962,61,2.327,62,2.327,64,2.327,66,2.643,67,1.433,138,1.479,142,0.759,235,4.354,293,1.865,390,2.769,392,2.641,648,4.398,652,4.131,653,3.455,654,4.446,656,3.708,1514,5.192,1525,4.446,1536,4.446,1537,5.088,1538,4.446,1539,5.088,1540,5.088,1541,4.446]],["title/injectables/UsersService.html",[111,0.819,235,2.142]],["body/injectables/UsersService.html",[3,0.057,4,0.057,5,0.038,7,0.276,8,0.013,13,0.287,16,1.121,29,0.057,30,0.088,31,1.264,32,1.413,34,0.005,35,0.005,67,0.552,69,1.121,73,0.974,74,1.446,75,0.974,76,1.15,94,2.503,95,1.121,100,2.506,106,1.85,110,0.57,111,0.638,112,0.719,114,0.221,115,0.877,117,0.973,119,1.684,120,1.165,135,2.329,138,2.183,141,1.919,142,0.864,143,0.84,144,1.8,145,2.202,163,2.57,165,1.352,175,0.799,181,2.182,209,2.023,211,2.565,217,3.442,221,1.713,235,1.669,256,0.877,259,2.808,266,2.808,271,1.936,273,2.605,274,2.461,278,1.25,283,1.429,285,1.631,292,1.852,293,2.263,300,1.22,310,2.541,316,2.541,320,1.55,323,2.334,330,2.334,335,0.934,336,1.31,337,1.31,338,1.665,342,1.413,343,1.796,346,1.1,349,1.796,350,1.31,353,1.846,354,1.413,363,1.728,366,0.799,368,0.799,395,3.218,399,2.125,404,1.067,406,1.181,407,1.121,408,1.121,413,0.799,414,2.461,415,1.181,416,1.181,417,1.181,418,1.181,419,1.181,420,1.181,421,1.181,422,2.708,423,1.936,424,1.936,426,1.936,427,1.181,428,1.936,430,1.181,431,1.181,432,1.181,433,1.181,434,1.181,435,1.181,436,1.067,437,1.181,438,1.181,439,1.181,440,1.181,441,1.181,442,1.936,443,1.181,444,1.121,445,1.181,446,2.57,447,1.181,448,1.936,449,1.936,450,1.181,451,1.181,452,1.936,453,1.121,454,1.181,455,1.181,456,1.181,457,1.181,458,1.121,459,1.181,460,1.181,461,1.936,462,1.936,465,0.83,466,0.862,467,0.862,473,2.57,544,3.047,546,3.218,547,2.846,548,2.846,653,1.331,660,1.713,665,2.808,669,1.331,670,1.429,673,2.342,678,1.55,693,1.55,712,1.713,722,1.713,828,2.605,884,2.541,953,3.208,976,1.429,1208,2.541,1327,3.229,1328,4.122,1373,3.569,1379,1.713,1456,2.808,1457,2.808,1458,2.808,1486,3.803,1517,2.808,1522,2.808,1526,1.713,1532,2.808,1541,1.713,1542,1.713,1543,4.084,1544,4.084,1545,4.084,1546,3.214,1547,3.214,1548,1.961,1549,1.961,1550,1.961,1551,1.961,1552,3.214,1553,1.961,1554,3.214,1555,6.173,1556,1.961,1557,1.961,1558,1.961,1559,1.961,1560,1.961,1561,1.961,1562,1.961,1563,1.961,1564,1.961,1565,1.961,1566,1.961,1567,1.961,1568,1.713,1569,1.961,1570,1.961,1571,3.214,1572,1.961,1573,1.961,1574,3.214,1575,1.961,1576,5.6,1577,3.214,1578,3.214,1579,1.961,1580,1.961,1581,1.961,1582,4.084,1583,1.961,1584,1.961,1585,1.961,1586,1.961,1587,1.961,1588,3.214]],["title/coverage.html",[1589,4.927]],["body/coverage.html",[0,2.099,1,1.838,5,0.076,6,2.204,8,0.012,14,1.609,20,1.713,23,1.442,25,1.713,27,1.109,30,0.37,34,0.006,35,0.006,42,1.067,111,1.55,113,2.204,124,1.838,125,2.204,135,0.893,138,1.143,143,0.332,151,1.52,163,1.372,165,0.835,174,1.201,179,1.52,180,3.287,184,1.372,232,1.713,233,1.713,235,1.31,255,2.204,293,0.924,332,1.838,333,2.204,340,1.609,346,1.654,358,1.713,364,1.609,388,1.838,393,2.204,472,2.865,498,3.109,499,3.52,516,1.52,539,3.772,544,1.372,554,2.204,555,3.109,562,1.609,563,2.204,564,3.109,582,1.609,583,2.204,584,3.109,591,1.52,592,3.109,593,3.52,605,1.609,607,1.609,608,2.204,609,3.109,615,1.109,619,1.609,620,2.204,621,3.109,638,1.838,639,2.204,641,1.609,648,1.713,650,1.713,652,1.609,657,2.204,671,1.838,672,1.994,673,1.838,688,6.294,727,2.204,728,1.838,729,2.204,735,1.713,742,1.838,750,1.609,755,1.994,776,1.838,780,2.204,791,1.838,792,2.204,808,2.204,832,2.507,834,2.204,835,1.201,836,2.865,856,1.713,858,1.838,859,2.204,869,1.713,872,1.609,899,2.204,916,2.204,917,3.109,932,1.994,933,1.994,962,2.204,980,2.204,982,2.204,990,1.838,991,2.204,999,1.609,1004,1.442,1057,1.713,1073,2.204,1074,2.204,1150,2.865,1163,1.838,1164,2.204,1173,1.713,1175,1.609,1196,2.204,1222,3.109,1229,1.838,1230,1.838,1238,1.52,1239,2.865,1260,1.838,1262,1.838,1263,2.204,1277,1.609,1280,1.713,1301,2.204,1329,2.865,1342,1.838,1343,2.204,1350,1.713,1370,2.204,1393,2.865,1405,1.838,1406,2.204,1418,1.713,1421,1.609,1424,1.994,1444,2.204,1469,2.204,1474,2.204,1476,2.204,1478,2.204,1480,2.204,1482,2.204,1484,2.204,1486,1.713,1487,2.204,1491,2.865,1514,1.838,1515,2.204,1542,2.204,1589,2.204,1590,2.522,1591,2.522,1592,2.522,1593,8.235,1594,5.455,1595,6.952,1596,4.831,1597,6.542,1598,6.264,1599,6.766,1600,4.831,1601,5.455,1602,7.753,1603,4.221,1604,5.716,1605,2.522,1606,2.204,1607,2.522,1608,2.522,1609,2.522,1610,2.522,1611,2.522,1612,2.522,1613,2.522,1614,2.522]],["title/dependencies.html",[39,2.101,1615,3.006]],["body/dependencies.html",[8,0.013,13,0.725,19,2.979,30,0.286,34,0.009,35,0.009,39,2.092,67,1.392,69,2.826,73,2.457,74,1.751,75,2.457,76,1.791,87,3.91,89,3.91,177,3.91,178,3.91,182,2.69,190,2.174,241,3.91,243,3.91,363,2.092,407,2.826,408,2.826,513,2.261,515,2.69,754,3.603,800,3.91,931,3.603,970,5.558,1002,3.603,1003,3.91,1008,4.32,1226,3.91,1471,2.69,1472,2.69,1568,4.32,1616,4.944,1617,7.029,1618,4.944,1619,4.944,1620,4.944,1621,6.359,1622,4.944,1623,4.944,1624,4.944,1625,4.944,1626,4.944,1627,6.359,1628,4.944,1629,4.944,1630,4.944,1631,4.944,1632,4.944,1633,4.944,1634,4.944,1635,3.91,1636,4.944,1637,4.944,1638,4.944,1639,4.944,1640,4.944,1641,4.944,1642,4.944,1643,4.944,1644,4.944,1645,4.944,1646,4.944,1647,4.944,1648,4.944,1649,4.944,1650,4.944,1651,4.944,1652,4.944,1653,4.944]],["title/miscellaneous/functions.html",[1635,3.925,1654,2.194]],["body/miscellaneous/functions.html",[8,0.011,34,0.011,35,0.011,42,3.366,114,0.738,1606,5.725,1635,5.181,1654,4.179,1655,6.552]],["title/index.html",[114,0.388,1656,3.44,1657,3.44]],["body/index.html",[8,0.012,34,0.01,35,0.01,422,2.828,444,3.112,453,3.863,458,3.112,538,4.306,694,5.906,697,4.758,706,4.758,1002,3.968,1658,6.759,1659,5.445,1660,5.445,1661,6.759,1662,6.759,1663,6.759,1664,5.445,1665,5.445,1666,6.759,1667,6.759,1668,6.759,1669,5.445,1670,5.445,1671,6.759,1672,6.759,1673,7.038,1674,7.038,1675,5.445,1676,5.445,1677,5.445,1678,5.445,1679,5.445,1680,5.445,1681,5.445,1682,5.445,1683,5.445,1684,5.445,1685,5.445,1686,4.758,1687,5.445,1688,5.445,1689,5.445,1690,5.445,1691,5.445,1692,5.445,1693,5.445,1694,5.445,1695,5.445]],["title/modules.html",[38,2.299]],["body/modules.html",[8,0.01,34,0.01,35,0.01,37,4.052,38,2.268,48,3.776,49,3.776,50,3.776,51,3.776,52,3.776,53,3.776,54,3.776,55,3.776,56,3.776,57,3.547,58,3.776,59,3.547,1037,7.412,1696,8.482,1697,8.482,1698,8.513,1699,5.561,1700,5.561]],["title/overview.html",[1701,4.927]],["body/overview.html",[2,1.062,8,0.012,14,3.907,23,4.262,34,0.008,35,0.008,36,0.878,37,6.189,38,1.537,39,1.595,40,1.724,41,1.724,42,1.595,43,1.724,44,1.724,45,3.294,46,3.294,47,3.294,48,5.513,49,4.754,50,5.063,51,4.754,52,4.16,53,4.93,54,4.754,55,4.754,56,4.754,57,4.756,58,4.754,59,4.756,60,2.423,61,1.724,62,1.724,112,1.382,184,4.057,228,3.294,230,3.294,231,3.294,232,4.16,233,4.16,235,3.953,364,3.907,384,3.294,385,3.294,471,0.935,538,2.981,641,3.907,644,3.294,645,3.294,750,3.907,771,3.294,772,3.294,833,2.981,872,4.756,892,3.294,893,3.294,894,3.294,999,3.907,1049,3.294,1050,3.294,1175,3.907,1191,3.294,1192,3.294,1277,3.907,1295,3.294,1296,3.294,1364,3.294,1365,3.294,1366,3.294,1421,3.907,1439,3.294,1440,3.294,1536,3.294,1538,3.294,1701,3.294,1702,5.298,1703,3.77,1704,3.77]],["title/properties.html",[256,1.354,1615,3.006]],["body/properties.html",[8,0.012,34,0.011,35,0.011,256,1.754,474,2.722,1673,5.62,1674,5.62,1686,5.62,1705,6.431,1706,6.431,1707,6.431,1708,6.431,1709,6.431]],["title/miscellaneous/typealiases.html",[1654,2.194,1710,4.963]],["body/miscellaneous/typealiases.html",[8,0.01,34,0.01,35,0.01,114,0.673,143,0.785,405,5.654,472,4.352,494,4.758,668,5.211,669,4.856,670,5.211,836,4.352,855,5.211,1005,5.211,1150,4.352,1239,4.352,1258,5.654,1329,4.352,1393,4.352,1491,4.352,1654,3.81,1711,5.973,1712,5.219,1713,5.219,1714,5.219,1715,5.219,1716,5.219,1717,5.219,1718,5.219]],["title/miscellaneous/variables.html",[1654,2.194,1719,4.337]],["body/miscellaneous/variables.html",[5,0.026,8,0.012,9,0.847,11,2.583,27,1.016,34,0.003,35,0.003,36,1.76,74,2.138,106,0.351,110,0.672,114,0.15,120,0.693,138,1.585,142,0.886,143,0.6,145,0.522,174,1.101,209,0.399,273,4.254,274,4.018,285,2.031,289,2.16,291,5.977,292,2.139,293,1.345,300,1.733,313,3.199,320,3.61,334,3.635,335,1.327,346,1.424,347,2.609,353,1.617,361,2.484,388,1.684,413,3.082,465,0.562,467,3.324,468,4.113,472,0.968,476,4.113,497,1.161,517,0.943,585,4.822,586,5.134,596,0.8,615,1.829,648,1.57,650,1.57,652,1.474,671,1.684,672,1.828,673,1.684,688,5.508,726,0.902,730,1.05,740,1.161,818,1.161,835,1.981,836,0.968,856,1.57,857,1.161,860,3.289,924,0.968,932,1.828,933,1.828,937,1.161,976,5.508,1057,1.57,1150,0.968,1162,1.161,1229,2.236,1238,2.506,1239,0.968,1260,1.684,1261,1.161,1264,4.288,1329,0.968,1341,1.161,1344,3.989,1393,0.968,1404,1.161,1424,1.828,1491,0.968,1510,1.161,1516,3.635,1603,1.161,1604,1.161,1654,0.847,1712,1.161,1713,1.161,1714,1.161,1715,1.161,1716,1.161,1717,1.161,1718,1.161,1719,1.161,1720,3.069,1721,4.907,1722,1.328,1723,1.328,1724,2.311,1725,7.594,1726,7.594,1727,8.178,1728,8.178,1729,1.328,1730,1.328,1731,7.559,1732,1.328,1733,2.311,1734,1.328,1735,3.069,1736,2.311,1737,1.328,1738,2.311,1739,1.328,1740,2.311,1741,1.328,1742,2.311,1743,2.311,1744,1.328,1745,3.069,1746,2.311,1747,1.328,1748,2.311,1749,1.328,1750,2.311,1751,1.328,1752,2.311,1753,1.328,1754,1.328,1755,1.328,1756,2.311,1757,1.328,1758,2.311,1759,2.311,1760,1.328,1761,3.069,1762,2.311,1763,1.328,1764,2.311,1765,1.328,1766,2.311,1767,1.328,1768,2.311,1769,1.328,1770,2.311,1771,2.311,1772,1.328,1773,2.311,1774,1.328,1775,3.069,1776,2.311,1777,1.328,1778,2.311,1779,1.328,1780,2.311,1781,1.328,1782,1.328,1783,2.311,1784,1.328,1785,2.311,1786,2.311,1787,1.328,1788,2.311,1789,1.328,1790,3.069,1791,2.311,1792,1.328,1793,2.311,1794,1.328,1795,2.311,1796,1.328,1797,2.311,1798,2.311,1799,1.328,1800,2.311,1801,1.328,1802,3.069,1803,2.311,1804,1.328,1805,2.311,1806,1.328,1807,2.311,1808,1.328,1809,1.328,1810,1.328,1811,1.328,1812,1.328,1813,1.328,1814,1.328,1815,1.328]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1706,"title":{},"body":{"properties.html":{}}}],["0.00",{"_index":1016,"title":{},"body":{"controllers/MailController.html":{}}}],["0.1.13",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":422,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.1",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["10.2.5",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["1024",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["123456",{"_index":553,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["13",{"_index":1702,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1703,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["2",{"_index":538,"title":{"classes/Company-2.html":{}},"body":{"index.html":{},"overview.html":{}}}],["2.0.2",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["3.0.3",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1704,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["6.9.5",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["60)@apibody({type",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.0",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["7.1.11",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["7039",{"_index":1695,"title":{},"body":{"index.html":{}}}],["__v",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["account')@post('/logout",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":787,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1067,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["address",{"_index":473,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":788,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["again",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["age",{"_index":547,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1711,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedfiletypes",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["allowedfiletypes.includes(fileextension",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["already",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{}}}],["api",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":585,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":543,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('company",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('job",{"_index":875,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1010,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1178,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resume",{"_index":1281,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('role",{"_index":1354,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1425,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1527,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1043,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["argumentshost",{"_index":813,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":527,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["array'})@isstring({each",{"_index":579,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["async",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":124,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":935,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":981,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1709,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":23,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1700,"title":{},"body":{"modules.html":{}}}],["await",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"can",{"_index":1586,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1321,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestexception(`${email",{"_index":1456,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`can",{"_index":1391,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`not",{"_index":1212,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`permission",{"_index":1207,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(`refresh",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`role",{"_index":1381,"title":{},"body":{"injectables/RolesService.html":{}}}],["based",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1126,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1568,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["body",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('status",{"_index":1291,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":487,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1101,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1698,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1696,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1033,"title":{},"body":{"controllers/MailController.html":{}}}],["bulk",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bước",{"_index":1659,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":1678,"title":{},"body":{"index.html":{}}}],["bản",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["c",{"_index":1679,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":1224,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1096,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":810,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cb",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(new",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["check",{"_index":794,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["chính",{"_index":1684,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1661,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":471,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":384,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":385,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":644,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":645,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":771,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":772,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":892,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":894,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":893,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1049,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1050,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1191,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1192,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1295,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1296,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1364,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1365,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1366,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1439,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1440,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1536,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1538,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1537,"title":{},"body":{"modules/UsersModule.html":{}}}],["co",{"_index":523,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["code",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["companies",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":387,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":332,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":49,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":364,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":346,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":555,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":559,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":560,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":561,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":558,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":391,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":594,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":388,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1567,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get(\"jwt_access_token_secret",{"_index":978,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('email_auth_pass",{"_index":1063,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1062,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1060,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1071,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongo_url",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1044,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1091,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":983,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":900,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1197,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1303,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodal",{"_index":1371,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1446,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{}}}],["context",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":940,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":939,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":942,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1236,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":643,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":801,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1011,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1179,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1282,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1355,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1426,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1528,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["countpermission",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1589,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(createcompanydto",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":781,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":861,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1165,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1345,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1408,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1266,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1517,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":340,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1092,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":562,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":516,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":582,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":591,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":607,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":619,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":605,"title":{"classes/CreateUserCVDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":544,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":1008,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cron(\"0",{"_index":1015,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1009,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["customize",{"_index":831,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cv",{"_index":1273,"title":{},"body":{"controllers/ResumesController.html":{}}}],["cài",{"_index":1664,"title":{},"body":{"index.html":{}}}],["các",{"_index":1658,"title":{},"body":{"index.html":{}}}],["câu",{"_index":1666,"title":{},"body":{"index.html":{}}}],["cần",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["d",{"_index":1662,"title":{},"body":{"index.html":{}}}],["dang",{"_index":525,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dang'})@isnotempty({message",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["data",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":640,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":647,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":642,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":638,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":50,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":641,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date(value",{"_index":535,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1129,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{}}}],["de",{"_index":520,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":867,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('remove",{"_index":1171,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["deletedat",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["deletedjob",{"_index":890,"title":{},"body":{"controllers/JobsController.html":{}}}],["deletedresume",{"_index":1293,"title":{},"body":{"controllers/ResumesController.html":{}}}],["deletedsubscriber",{"_index":1437,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["deleteduser",{"_index":1534,"title":{},"body":{"controllers/UsersController.html":{}}}],["denied",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":474,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1670,"title":{},"body":{"index.html":{}}}],["dinh",{"_index":524,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dir",{"_index":1064,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1100,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["doc",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["docx",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["don't",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dto/create",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":545,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dungbum",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dungbum@gmail.com",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["duoc",{"_index":519,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dân",{"_index":1674,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dùng/ứng",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dụng",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/FilesController.html":{}}}],["each",{"_index":528,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["eexist",{"_index":1097,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["ekkophantoms123@gmail.com",{"_index":1036,"title":{},"body":{"controllers/MailController.html":{}}}],["email",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":996,"title":{},"body":{"controllers/MailController.html":{}}}],["emails",{"_index":1458,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":557,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["enddate",{"_index":536,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["endpoint",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["env",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["err",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1095,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["example",{"_index":552,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["exception.filter",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception.filter.ts",{"_index":808,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":809,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exec",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1208,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1093,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{}}}],["expiresin",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":934,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1121,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1122,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":968,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":974,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":976,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fanpage",{"_index":1691,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined)@usefilters(new",{"_index":741,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":564,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.originalname.split('.').pop().tolowercase",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileextension",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filefilter",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileinterceptor",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":774,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":728,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filesmodule",{"_index":51,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":750,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filter",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1128,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1302,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1308,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1546,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1552,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1543,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["following",{"_index":549,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["forbiddenexception",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception(\"you",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["form",{"_index":551,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["found",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundcompany",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["foundpermission",{"_index":1185,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["foundresume",{"_index":1289,"title":{},"body":{"controllers/ResumesController.html":{}}}],["foundrole",{"_index":1388,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1390,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundsubscriber",{"_index":1433,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["founduser",{"_index":884,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1585,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1089,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1635,"title":{"miscellaneous/functions.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["gender",{"_index":548,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1565,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/profile",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":865,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["get()@public()@healthcheck",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["get()@public()@responsemessage('test",{"_index":995,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1167,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["getaccountf5",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccountf5(@user",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccountf5(user",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethashpassword",{"_index":1544,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@req",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["getresumebyuser",{"_index":1265,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumebyuser(user",{"_index":1270,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1445,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1451,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1656,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1407,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1430,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1412,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["gi",{"_index":1672,"title":{},"body":{"index.html":{}}}],["gia",{"_index":611,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["gif",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["graph",{"_index":1699,"title":{},"body":{"modules.html":{}}}],["h",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handle",{"_index":1233,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlebars",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1055,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefresh",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefresh(request",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":993,"title":{},"body":{"controllers/MailController.html":{}}}],["hash",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1555,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1566,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(plain_pass",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["health",{"_index":793,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":806,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":797,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":798,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":791,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":52,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1240,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hiện",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["hoidanit@gmail.com",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":812,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{}}}],["host.switchtohttp",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":1045,"title":{},"body":{"controllers/MailController.html":{}}}],["httpexception",{"_index":811,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["httpexception('invalid",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["httpexceptionfilter",{"_index":742,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://hoidanit.com.vn",{"_index":1686,"title":{},"body":{"index.html":{},"properties.html":{}}}],["https://www.facebook.com/askitwitheric",{"_index":1692,"title":{},"body":{"index.html":{}}}],["https://www.tiktok.com/@hoidanit",{"_index":1690,"title":{},"body":{"index.html":{}}}],["https://www.udemy.com/user/eric",{"_index":1694,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/@hoidanit",{"_index":1688,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hydrateddocument",{"_index":494,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hỏi",{"_index":1673,"title":{},"body":{"index.html":{},"properties.html":{}}}],["i'm",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isarray({message",{"_index":617,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["identifier",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":975,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1124,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":114,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["information')@get('/account",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":908,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1313,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1012,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1231,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1467,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":832,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":833,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":932,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":933,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":537,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":509,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{}}}],["isboolean",{"_index":512,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{}}}],["isdate",{"_index":511,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{}}}],["isdate({message",{"_index":569,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdefined",{"_index":506,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isdefined()@isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":565,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isdeleted",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":504,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":542,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":556,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject",{"_index":507,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isobject",{"_index":508,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":937,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":943,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":510,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1511,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidfiletype",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["isvaliduserpassword",{"_index":1547,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvaliduserpassword(password",{"_index":1554,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1099,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company.name",{"_index":1029,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1028,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1030,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1032,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":135,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["job",{"_index":835,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":874,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:18",{"_index":501,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":503,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:24",{"_index":502,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:28",{"_index":575,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":580,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:40",{"_index":566,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:43",{"_index":574,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":577,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:49",{"_index":576,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:52",{"_index":573,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:55",{"_index":567,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":581,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:65",{"_index":570,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:69",{"_index":572,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":898,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":855,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":595,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":902,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":860,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":896,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":873,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":856,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":858,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":53,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":872,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1023,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map(item",{"_index":1027,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills?.length",{"_index":1026,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1054,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1065,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpeg",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["json",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jwt",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":25,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":973,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":232,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["khong",{"_index":518,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["không",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["kiếm",{"_index":1681,"title":{},"body":{"index.html":{}}}],["kiện",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["kết",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["la",{"_index":526,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{}}}],["large",{"_index":830,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":533,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["license",{"_index":1707,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["limits",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["list",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["literal",{"_index":480,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["local",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":20,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":233,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":530,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(user",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":475,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(response",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["làm",{"_index":1660,"title":{},"body":{"index.html":{}}}],["lượng",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lấy",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lệnh",{"_index":1667,"title":{},"body":{"index.html":{}}}],["mail",{"_index":992,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1052,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1000,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":990,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1053,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1058,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1001,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":54,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":999,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1227,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1235,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":517,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":586,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1654,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1564,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1003,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1056,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":606,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{}}}],["mongoid",{"_index":550,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongoose",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1259,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":496,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":1213,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":799,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":390,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://dungbum:1gvsrun6j6u5sigu@cluster0.fhbp7dw.mongodb.net",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1087,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":777,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":776,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":775,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":778,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mọi",{"_index":1675,"title":{},"body":{"index.html":{}}}],["n",{"_index":1663,"title":{},"body":{"index.html":{}}}],["name",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["nestinterceptor",{"_index":1223,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1002,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config/dist",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/core",{"_index":931,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1471,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":800,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newjob",{"_index":878,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/SubscribersController.html":{}}}],["newjob?._id",{"_index":880,"title":{},"body":{"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["newjob?.createdat",{"_index":881,"title":{},"body":{"controllers/JobsController.html":{}}}],["newjob?.createdby",{"_index":1428,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["newpermission",{"_index":1180,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1182,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["newpermission?.createdat",{"_index":1183,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["newregister",{"_index":1588,"title":{},"body":{"injectables/UsersService.html":{}}}],["newresume",{"_index":1283,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["newresume?._id",{"_index":1285,"title":{},"body":{"controllers/ResumesController.html":{}}}],["newresume?.createdat",{"_index":1286,"title":{},"body":{"controllers/ResumesController.html":{}}}],["newrole",{"_index":1356,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1358,"title":{},"body":{"controllers/RolesController.html":{}}}],["newrole?.createdat",{"_index":1359,"title":{},"body":{"controllers/RolesController.html":{}}}],["newsubscriber",{"_index":1459,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":1232,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["người",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nice",{"_index":1042,"title":{},"body":{"controllers/MailController.html":{}}}],["nodemailer",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1668,"title":{},"body":{"index.html":{}}}],["null",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":482,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["objuser",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1225,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["omittype",{"_index":1489,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1490,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1068,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1039,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1701,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1615,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1470,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1473,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1475,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1477,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1479,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1481,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1483,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1485,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":970,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":971,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":546,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":870,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1523,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1419,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1127,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1123,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["pending",{"_index":1315,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":615,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.dto",{"_index":1177,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":584,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":588,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":589,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":590,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":587,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.name",{"_index":655,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.apipath",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.controller",{"_index":1194,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permissions",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.method",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1176,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":650,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1163,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":55,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1175,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phần",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pipe",{"_index":1234,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plain_pass",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["plugin",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["png",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["populate",{"_index":1327,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1271,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('skills",{"_index":1429,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1413,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":862,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1070,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1088,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":1316,"title":{},"body":{"injectables/ResumesService.html":{}}}],["promise",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":477,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1499,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":481,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":256,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1169,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('get",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@throttle(5",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1324,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":532,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["query",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"current",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query(\"pagesize",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["queuescheduler",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["quyền",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1090,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1242,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":163,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["remove(_id",{"_index":1202,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["remove(id",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":790,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["req",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.headers?.folder_type",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.url",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1098,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1509,"title":{},"body":{"classes/User.html":{}}}],["res",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":151,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1229,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"fetch",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"get",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"logout",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"register",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"test",{"_index":1014,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage(\"upload",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('create",{"_index":877,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":889,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":883,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('logout",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('remove",{"_index":1189,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["responsemessage('update",{"_index":886,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('user",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1238,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1279,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":593,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:19",{"_index":600,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:22",{"_index":604,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:25",{"_index":603,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:28",{"_index":602,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:31",{"_index":599,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:34",{"_index":601,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:39",{"_index":628,"title":{},"body":{"classes/CreateUserCVDto.html":{}}}],["resume.dto.ts:43",{"_index":626,"title":{},"body":{"classes/CreateUserCVDto.html":{}}}],["resume.dto.ts:47",{"_index":627,"title":{},"body":{"classes/CreateUserCVDto.html":{}}}],["resume.name",{"_index":1300,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1258,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1305,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1264,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1298,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1278,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1260,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1262,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":56,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1277,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":293,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1353,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":609,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":613,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":618,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":614,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":610,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":656,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodal",{"_index":1373,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["rolemodel",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["roles",{"_index":1344,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1368,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1352,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":652,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1342,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesmodule",{"_index":57,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":184,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1669,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1226,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/scheduler/queuescheduler",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["rxjs/operators",{"_index":1228,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":531,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schedulemodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":392,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/subscriber.schema",{"_index":1443,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemafactory",{"_index":493,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":497,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":857,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1162,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1261,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1341,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1404,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1510,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":389,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":897,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1195,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1299,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1369,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/user.schema",{"_index":1541,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":977,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1061,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1328,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1319,"title":{},"body":{"injectables/ResumesService.html":{}}}],["server",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":740,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":522,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["skills",{"_index":529,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skills')@skipcheckpermission",{"_index":1414,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skip(offset",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1424,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1712,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1713,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1714,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1715,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1717,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1718,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:44",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:63",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:141",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":980,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":967,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":982,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":986,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":984,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:16",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:25",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:35",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:41",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:50",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":386,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:14",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:20",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:32",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:60",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:69",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:83",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":554,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1469,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1257,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":472,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":478,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":486,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":489,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":483,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":492,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":485,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":479,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":491,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":484,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":488,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":490,"title":{},"body":{"classes/Company.html":{}}}],["src/core/http",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1222,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1466,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:22",{"_index":1468,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":639,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":646,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1379,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":563,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1474,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:18",{"_index":743,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:28",{"_index":732,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:33",{"_index":733,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:38",{"_index":736,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:43",{"_index":734,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":773,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":780,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":783,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":784,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":786,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":785,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":782,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:13",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:37",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:9",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/schemas/file.schema.ts",{"_index":727,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":792,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":805,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1476,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":859,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:16",{"_index":863,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:30",{"_index":864,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:41",{"_index":866,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":871,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:59",{"_index":868,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":895,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":899,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:13",{"_index":901,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:19",{"_index":903,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:41",{"_index":904,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:69",{"_index":905,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:78",{"_index":907,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:92",{"_index":906,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1007,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":836,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":851,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":837,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":847,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":850,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":849,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":846,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":842,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":852,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":843,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":844,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":839,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":854,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:58",{"_index":841,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":838,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:67",{"_index":853,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:70",{"_index":840,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:73",{"_index":845,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":848,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":991,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:26",{"_index":998,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.controller.ts:34",{"_index":997,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1051,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1073,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1606,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":583,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1478,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1164,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:16",{"_index":1166,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:29",{"_index":1168,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:40",{"_index":1170,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:47",{"_index":1174,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:58",{"_index":1172,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1193,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1196,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1198,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:18",{"_index":1199,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:34",{"_index":1200,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:62",{"_index":1201,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:71",{"_index":1205,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:88",{"_index":1203,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":651,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1150,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1151,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1157,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1158,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1153,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1161,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1155,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1152,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:42",{"_index":1160,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1154,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":1156,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1159,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":592,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1480,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1263,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:16",{"_index":1267,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:29",{"_index":1274,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:38",{"_index":1268,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:49",{"_index":1269,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:56",{"_index":1276,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:67",{"_index":1275,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1297,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1301,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:111",{"_index":1311,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1304,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:130",{"_index":1309,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1306,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:43",{"_index":1307,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:72",{"_index":1310,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:81",{"_index":1312,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1239,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1248,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1256,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1255,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1252,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1243,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1251,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1249,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1245,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1254,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:51",{"_index":1247,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:57",{"_index":1244,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:60",{"_index":1253,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:63",{"_index":1246,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:66",{"_index":1250,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":608,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1482,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1343,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:15",{"_index":1346,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:28",{"_index":1347,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:39",{"_index":1348,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:45",{"_index":1351,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:56",{"_index":1349,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1367,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1370,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1372,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1374,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:35",{"_index":1375,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:63",{"_index":1376,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:75",{"_index":1378,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:93",{"_index":1377,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":653,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1329,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1337,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1334,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1335,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1338,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1331,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1340,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1333,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1330,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:43",{"_index":1339,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1332,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:49",{"_index":1336,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":620,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1484,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schema/subscriber.schema",{"_index":1006,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schema/subscriber.schema.ts",{"_index":1393,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:12",{"_index":1400,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:15",{"_index":1401,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:18",{"_index":1395,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:24",{"_index":1403,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:30",{"_index":1397,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:36",{"_index":1394,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:39",{"_index":1402,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:42",{"_index":1396,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:45",{"_index":1399,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:9",{"_index":1398,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1406,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:16",{"_index":1409,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:30",{"_index":1415,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:37",{"_index":1410,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:48",{"_index":1411,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:56",{"_index":1420,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:66",{"_index":1416,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1441,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1444,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:105",{"_index":1452,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1447,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:18",{"_index":1448,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:36",{"_index":1449,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:65",{"_index":1450,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:74",{"_index":1454,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:89",{"_index":1453,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1487,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":649,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1491,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1503,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1500,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1504,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1493,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1501,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1492,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1494,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1506,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1505,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1496,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1508,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1498,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1495,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1507,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1497,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:67",{"_index":1502,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1515,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":1518,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":1519,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":1520,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1524,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1521,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":834,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1539,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1542,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:100",{"_index":1553,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:111",{"_index":1556,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:116",{"_index":1559,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:130",{"_index":1558,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:153",{"_index":1557,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:174",{"_index":1562,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":1548,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:181",{"_index":1560,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1561,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1549,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":1550,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:87",{"_index":1551,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":534,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["started",{"_index":1657,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":596,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["status(status",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":969,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1069,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1040,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1020,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1048,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1022,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1004,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1423,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":621,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:13",{"_index":624,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":622,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:8",{"_index":623,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1072,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1005,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1013,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1018,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1442,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1422,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1057,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1405,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":58,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1421,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1021,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["sunday",{"_index":1017,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":936,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":941,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1037,"title":{},"body":{"controllers/MailController.html":{},"modules.html":{}}}],["svg",{"_index":1697,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1094,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["system",{"_index":1457,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["t",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["table",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1038,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1034,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1066,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":807,"title":{},"body":{"modules/HealthModule.html":{}}}],["testcron",{"_index":994,"title":{},"body":{"controllers/MailController.html":{}}}],["th",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["this.authservice.login(req.user",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":987,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel.create",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"should_init",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(password",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel.create",{"_index":909,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1024,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter",{"_index":911,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":910,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":912,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":915,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":914,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":879,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":882,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":885,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":888,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1035,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel.count",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1209,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":1211,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1210,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1206,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1215,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1214,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1181,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1184,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1186,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1190,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1188,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1237,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":938,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1314,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1326,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1318,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1317,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1320,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1325,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1323,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1284,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1288,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1287,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1290,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1294,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1292,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodal.create",{"_index":1382,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.find(filter",{"_index":1384,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.find(filter)).length",{"_index":1383,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.findbyid(_id",{"_index":1389,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.findbyid(id",{"_index":1385,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.findone",{"_index":1380,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.softdelete",{"_index":1392,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodal.updateone",{"_index":1387,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.findone",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.insertmany",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1357,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1360,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1361,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.findone(userrole._id)).toobject",{"_index":979,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id",{"_index":1363,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1362,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel.create",{"_index":1460,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1019,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter",{"_index":1462,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1461,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1455,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1465,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1463,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1427,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1432,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1434,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1431,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1438,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1436,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel.count",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1587,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get(\"init_password",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1529,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1530,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1531,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvaliduserpassword(pass",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1535,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1533,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(5",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thông",{"_index":1676,"title":{},"body":{"index.html":{}}}],["thống",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thức",{"_index":1685,"title":{},"body":{"index.html":{}}}],["tiktok",{"_index":1689,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamps",{"_index":495,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":1677,"title":{},"body":{"index.html":{}}}],["todo",{"_index":1025,"title":{},"body":{"controllers/MailController.html":{}}}],["token",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token')@get('/refresh",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trang",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transform",{"_index":514,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{}}}],["transformer",{"_index":515,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1230,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1059,"title":{},"body":{"modules/MailModule.html":{}}}],["tri",{"_index":612,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trong",{"_index":521,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trong'})@isarray({message",{"_index":578,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trong'})@isboolean({message",{"_index":571,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["trong'})@ismongoid({each",{"_index":616,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trong'})@ismongoid({message",{"_index":625,"title":{},"body":{"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{}}}],["trong'})@transform",{"_index":568,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["true",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trying",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ts",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ttl",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1710,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1472,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tác",{"_index":1671,"title":{},"body":{"index.html":{}}}],["tên",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["tìm",{"_index":1680,"title":{},"body":{"index.html":{}}}],["tại",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tổng",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["udemy",{"_index":1693,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"invalid",{"_index":988,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":1241,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unknown",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1708,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(_id",{"_index":1204,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["update(id",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1417,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1522,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":358,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":476,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedjob",{"_index":913,"title":{},"body":{"injectables/JobsService.html":{}}}],["updatedresume",{"_index":1322,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatefiledto",{"_index":735,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejob",{"_index":887,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{}}}],["updatejobdto",{"_index":869,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermission",{"_index":1187,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{}}}],["updatepermissiondto",{"_index":1173,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1280,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updaterole",{"_index":1386,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateroledto",{"_index":1350,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":789,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatesubscriber",{"_index":1435,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["updatesubscriberdto",{"_index":1418,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":1532,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":1486,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1545,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1464,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":597,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":779,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["usefilters",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["usefilters(new",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["useguards",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('/profile",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":138,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@post('/register",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1272,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":539,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":540,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:20",{"_index":541,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:24",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":630,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":629,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1488,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:51",{"_index":631,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:56",{"_index":1220,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:60",{"_index":1218,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:63",{"_index":1221,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:66",{"_index":1217,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:69",{"_index":1219,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:72",{"_index":1216,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:79",{"_index":1513,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:86",{"_index":1512,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":654,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":598,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":179,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('/login')@responsemessage('user",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1563,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["username/password",{"_index":989,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1516,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1540,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1526,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1525,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":648,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1514,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":59,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":235,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["valid",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["validate",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":966,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":985,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":505,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":513,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCVDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["variable",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1719,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1705,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viên",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":1665,"title":{},"body":{"index.html":{}}}],["vnd",{"_index":1031,"title":{},"body":{"controllers/MailController.html":{}}}],["void",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{}}}],["với",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["website",{"_index":1683,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1041,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1125,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["y",{"_index":1682,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["youtube",{"_index":1687,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Controller, Get, Render, Post, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config/dist';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { Public } from './decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService\n  ) { }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose'\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    ScheduleModule.forRoot(),\n    // MongooseModule.forRoot('mongodb+srv://dungbum:1GVSRUn6j6U5siGU@cluster0.fhbp7dw.mongodb.net/'),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot(\n      { isGlobal: true }\n    ),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService,\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World with DungBum!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getAccountF5\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefresh\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                            \n                                    \n                                    \n                                Logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAccountF5\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccountF5(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get user information')@Get('/account')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle(5, 60)@ApiBody({type: UserLoginDto})@Post('/login')@ResponseMessage('User Login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRefresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRefresh(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get user by refresh token')@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    Logout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout an account')@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, Post, UseGuards, Body, Res, Req } from '@nestjs/common';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { JwtAuthGuard } from './jwt-auth.guard';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard, Throttle } from '@nestjs/throttler';\nimport { ApiTags, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller(\"auth\")\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private roleService: RolesService\n    ) { }\n\n    @Public()\n    @UseGuards(LocalAuthGuard)\n    @UseGuards(ThrottlerGuard)\n    @Throttle(5, 60)\n    @ApiBody({ type: UserLoginDto, })\n    @Post('/login')\n    @ResponseMessage('User Login')\n    handleLogin(\n        @Req() req,\n        @Res({ passthrough: true }) response: Response\n    ) {\n        return this.authService.login(req.user, response)\n    }\n\n    @Public()\n    @ResponseMessage(\"Register a new user\")\n    @Post('/register')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.register(registerUserDto)\n    }\n\n    @ResponseMessage(\"Get user information\")\n    @Get('/account')\n    async getAccountF5(@User() user: IUser) {\n        const temp = await this.roleService.findOne(user.role._id) as any\n        user.permissions = temp.permissions\n        return { user }\n    }\n\n    @Public()\n    @ResponseMessage(\"Get user by refresh token\")\n    @Get('/refresh')\n    handleRefresh(\n        @Req() request: Request,\n        @Res({ passthrough: true }) response: Response\n    ) {\n        const refreshToken = request.cookies['refresh_token']\n        return this.authService.processNewToken(refreshToken, response)\n    }\n\n    @ResponseMessage(\"Logout an account\")\n    @Post('/logout')\n    Logout(\n        @Res({ passthrough: true }) response: Response,\n        @User() user: IUser\n    ) {\n        return this.authService.logout(response, user)\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get('/profile')\n    getProfile(@Req() req) {\n        return req.user;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersService } from 'src/users/users.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms'\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      //config in .env\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService]\n})\n\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private rolesService: RolesService\n    ) { }\n\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if (user) {\n            const isValid = this.usersService.isValidUserPassword(pass, user.password)\n            if (isValid === true) {\n                const userRole = user.role as unknown as { _id: string, name: string }\n                const temp = await this.rolesService.findOne(userRole._id)\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? []\n                }\n\n                return objUser\n            }\n        }\n        return null;\n    }\n\n    async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: \"token login\",\n            iss: \"from server\",\n            _id,\n            name,\n            email,\n            role\n        };\n\n        const refresh_token = this.createRefreshToken(payload)\n\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id)\n\n        //set refresh_token as cookies\n        response.cookie('refresh_token', refresh_token, {\n            httpOnly: true,\n            maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n        })\n\n        return {\n            access_token: this.jwtService.sign(payload),\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions\n            }\n        };\n    }\n\n    async register(user: RegisterUserDto) {\n        let newUser = await this.usersService.register(user)\n        return {\n            _id: newUser?._id,\n            createdAt: newUser?.createdAt\n        }\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refreshToken = this.jwtService.sign(payload, {\n            secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            expiresIn: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n        })\n        return refreshToken\n    }\n\n    processNewToken = async (refreshToken: string, response: Response) => {\n        try {\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            })\n            let user = await this.usersService.findUserByToken(refreshToken)\n            if (user) {\n                const { _id, name, email, role } = user;\n                const payload = {\n                    sub: \"token refresh\",\n                    iss: \"from server\",\n                    _id,\n                    name,\n                    email,\n                    role\n                };\n\n                const refresh_token = this.createRefreshToken(payload)\n\n                //update user with refresh token\n                await this.usersService.updateUserToken(refresh_token, _id.toString())\n\n                //fetch user's role\n                const userRole = user.role as unknown as { _id: string, name: string }\n                const temp = await this.rolesService.findOne(userRole._id)\n\n                //set refresh_token as cookies\n                response.clearCookie('refresh_token')\n\n                response.cookie('refresh_token', refresh_token, {\n                    httpOnly: true,\n                    maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n                })\n\n                return {\n                    access_token: this.jwtService.sign(payload),\n                    user: {\n                        _id,\n                        name,\n                        email,\n                        role,\n                        permissions: temp?.permissions ?? []\n                    }\n                };\n            } else {\n                throw new BadRequestException(`Refresh token is not valid. Try login again!`);\n            }\n        } catch (err) {\n            throw new BadRequestException(`Refresh token is not valid. Try login again!`);\n        }\n    }\n\n    logout = async (response: Response, user: IUser) => {\n        await this.usersService.updateUserToken(\"\", user._id)\n        response.clearCookie('refresh_token');\n        return \"Logout Successfully\"\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list company with paginate')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('company')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n\n  @Post()\n  create(\n    @Body() createCompanyDto: CreateCompanyDto, @User() user: IUser\n  ) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Fetch list company with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    let foundCompany = this.companiesService.findOne(id);\n    return foundCompany\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport { QueueScheduler } from 'rxjs/internal/scheduler/QueueScheduler';\nimport mongoose from 'mongoose';\n\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel\n  ) { }\n\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    let company = await this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n\n    return company\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found company'\n    }\n    return this.companyModel.findOne({\n      _id: id\n    })\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    let company = await this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return company\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        // isDeleted: true,\n        // deletedAt: new Date()\n      }\n    )\n    return this.companyModel.softDelete({\n      _id: id\n    })\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop()\n    name: string;\n\n    @Prop()\n    address: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsArray,\n    IsString,\n    IsDate,\n    IsBoolean,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skill khong duoc de trong' })\n    @IsArray({ message: 'Skill co dinh dang la array' })\n    @IsString({ each: true, message: 'Skill co dinh dang la string' })\n    skills: string[];\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'Location khong duoc de trong' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary khong duoc de trong' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'Quantity khong duoc de trong' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level khong duoc de trong' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description khong duoc de trong' })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate khong duoc de trong' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate co dinh dang la Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate khong duoc de trong' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate co dinh dang la Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive khong duoc de trong' })\n    @IsBoolean({ message: 'isActive co dinh dang boolean' })\n    isActive: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsMongoId,\n    IsString,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role khong duoc de trong' })\n    @IsMongoId({ message: 'Role is following MongoID form' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'dungbum', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'The address is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'The description is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'The logo is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'The name is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreateCompanyDto {\n    @IsNotEmpty({ message: 'The name is empty' })\n    name: string;\n\n    @IsNotEmpty({ message: 'The address is empty' })\n    address: string;\n\n    @IsNotEmpty({ message: 'The description is empty' })\n    description: string;\n\n    @IsNotEmpty({ message: 'The logo is empty' })\n    logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endDate khong duoc de trong'})@Transform( => )@IsDate({message: 'endDate co dinh dang la Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive khong duoc de trong'})@IsBoolean({message: 'isActive co dinh dang boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skill khong duoc de trong'})@IsArray({message: 'Skill co dinh dang la array'})@IsString({each: true, message: 'Skill co dinh dang la string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startDate khong duoc de trong'})@Transform( => )@IsDate({message: 'startDate co dinh dang la Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsArray,\n    IsString,\n    IsDate,\n    IsBoolean,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skill khong duoc de trong' })\n    @IsArray({ message: 'Skill co dinh dang la array' })\n    @IsString({ each: true, message: 'Skill co dinh dang la string' })\n    skills: string[];\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'Location khong duoc de trong' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Salary khong duoc de trong' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'Quantity khong duoc de trong' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level khong duoc de trong' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Description khong duoc de trong' })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate khong duoc de trong' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate co dinh dang la Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate khong duoc de trong' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate co dinh dang la Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive khong duoc de trong' })\n    @IsBoolean({ message: 'isActive co dinh dang boolean' })\n    isActive: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'APIPath khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Method khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsNotEmpty({ message: 'APIPath khong duoc de trong' })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'Method khong duoc de trong' })\n    method: string;\n\n    @IsNotEmpty({ message: 'Module khong duoc de trong' })\n    module: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'CompanyId khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'JobId khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Status khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'URL khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'UserId khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsArray,\n    IsString,\n    IsDate,\n    IsBoolean,\n    IsMongoId,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'UserId khong duoc de trong' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'URL khong duoc de trong' })\n    url: string;\n\n    @IsNotEmpty({ message: 'Status khong duoc de trong' })\n    status: string;\n\n    @IsNotEmpty({ message: 'CompanyId khong duoc de trong' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId khong duoc de trong' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCVDto {\n    @IsNotEmpty({ message: 'URL khong duoc de trong' })\n    url: string;\n\n    @IsNotEmpty({ message: 'CompanyId khong duoc de trong' })\n    @IsMongoId({ message: 'CompanyId la mongo Id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId khong duoc de trong' })\n    @IsMongoId({ message: 'JobId la mongo Id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'IsActive khong duoc de trong'})@IsBoolean({message: 'IsActive co gia tri boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Permission khong duoc de trong'})@IsMongoId({each: true, message: 'Permission form is mongo object id'})@IsArray({message: 'Permission form is an array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Description khong duoc de trong' })\n    description: string;\n\n    @IsNotEmpty({ message: 'IsActive khong duoc de trong' })\n    @IsBoolean({ message: 'IsActive co gia tri boolean' })\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'Permission khong duoc de trong' })\n    @IsMongoId({ each: true, message: 'Permission form is mongo object id' })\n    @IsArray({ message: 'Permission form is an array' })\n    permissions: mongoose.Schema.Types.ObjectId[];\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skill khong duoc de trong'})@IsArray({message: 'Skill co dinh dang la array'})@IsString({each: true, message: 'Skill co dinh dang la string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skill khong duoc de trong' })\n    @IsArray({ message: 'Skill co dinh dang la array' })\n    @IsString({ each: true, message: 'Skill co dinh dang la string' })\n    skills: string[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCVDto.html":{"url":"classes/CreateUserCVDto.html","title":"class - CreateUserCVDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCVDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'CompanyId khong duoc de trong'})@IsMongoId({message: 'CompanyId la mongo Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'JobId khong duoc de trong'})@IsMongoId({message: 'JobId la mongo Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'URL khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsArray,\n    IsString,\n    IsDate,\n    IsBoolean,\n    IsMongoId,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'UserId khong duoc de trong' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'URL khong duoc de trong' })\n    url: string;\n\n    @IsNotEmpty({ message: 'Status khong duoc de trong' })\n    status: string;\n\n    @IsNotEmpty({ message: 'CompanyId khong duoc de trong' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId khong duoc de trong' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCVDto {\n    @IsNotEmpty({ message: 'URL khong duoc de trong' })\n    url: string;\n\n    @IsNotEmpty({ message: 'CompanyId khong duoc de trong' })\n    @IsMongoId({ message: 'CompanyId la mongo Id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'JobId khong duoc de trong' })\n    @IsMongoId({ message: 'JobId la mongo Id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email khong dung dinh dang'})@IsNotEmpty({message: 'Email khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role khong duoc de trong'})@IsMongoId({message: 'Role is following MongoID form'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsMongoId,\n    IsString,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role khong duoc de trong' })\n    @IsMongoId({ message: 'Role is following MongoID form' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'dungbum', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ])\n  ],\n\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/databases/databases.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n    private readonly logger = new Logger(DatabasesService.name);\n\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) { }\n\n\n    async onModuleInit() {\n        const isInit = this.configService.get(\"SHOULD_INIT\");\n        if (Boolean(isInit)) {\n\n            const countUser = await this.userModel.count({});\n            const countPermission = await this.permissionModel.count({});\n            const countRole = await this.roleModel.count({});\n\n            //create permissions\n            if (countPermission === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS);\n                //bulk create\n            }\n\n            // create role\n            if (countRole === 0) {\n                const permissions = await this.permissionModel.find({}).select(\"_id\");\n                await this.roleModel.insertMany([\n                    {\n                        name: ADMIN_ROLE,\n                        description: \"Admin thì full quyền :v\",\n                        isActive: true,\n                        permissions: permissions\n                    },\n                    {\n                        name: USER_ROLE,\n                        description: \"Người dùng/Ứng viên sử dụng hệ thống\",\n                        isActive: true,\n                        permissions: [] //không set quyền, chỉ cần add ROLE\n                    }\n                ]);\n            }\n\n            if (countUser === 0) {\n                const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n                const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n                await this.userModel.insertMany([\n                    {\n                        name: \"I'm admin\",\n                        email: \"admin@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm DungBum\",\n                        email: \"dungbum@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 21,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm normal user\",\n                        email: \"user@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: userRole?._id\n                    },\n                ])\n            }\n\n            if (countUser > 0 && countRole > 0 && countPermission > 0) {\n                this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/schemas/file.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload single file')@UseInterceptors(undefined)@UseFilters(new HttpExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { fileName: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus, UseFilters } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { HttpExceptionFilter } from 'src/core/http-exception.filter';\n\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage(\"Upload single file\")\n  @UseInterceptors(FileInterceptor('fileUpload')) //tên field sử dụng trong form-data\n  @UseFilters(new HttpExceptionFilter())\n  uploadFile(\n    @UploadedFile()\n    file: Express.Multer.File) {\n    return {\n      fileName: file.filename\n    }\n  }\n\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    })\n  ]\n})\n\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFileDto\n                                    \n                                                CreateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private db: MongooseHealthIndicator,\n    ) { }\n    @Get()\n    @Public()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.db.pingCheck('database'),\n        ]);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response\n            .status(status)\n            .json({\n                // statusCode: status,\n                // timestamp: new Date().toISOString(),\n                // path: request.url,\n\n                error: \"Payload too large\",\n                message: \"File too large customize\",\n                statusCode: status\n            });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string;\n    name: string;\n    email: string;\n    role: {\n        _id: string,\n        name: string\n    };\n    permissions?: {\n        _id: string,\n        name: string,\n        apiPath: string,\n        module: string\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string\n    }\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date\n\n    @Prop()\n    isActive: boolean\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDTO: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDTO\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list user with paginate')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch job by ID')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a user')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('job')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  async create(\n    @Body() createJobDTO: CreateJobDto,\n    @User() user: IUser\n  ) {\n    let newJob = await this.jobsService.create(createJobDTO, user);\n    return {\n      _id: newJob?._id,\n      createdAt: newJob?.createdAt\n    };\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Fetch list user with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch job by ID')\n  findOne(@Param('id') id: string) {\n    let foundUser = this.jobsService.findOne(id);\n    return foundUser\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a user')\n  async update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser\n  ) {\n    let updateJob = await this.jobsService.update(id, updateJobDto, user);\n    return updateJob\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a job')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    let deletedJob = this.jobsService.remove(id, user);\n    return deletedJob\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_JobsModule_exports\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n  exports: [JobsService]\n\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport mongoose from 'mongoose';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel\n  ) { }\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    let { name, skills, company, location, salary, quantity, level, description, startDate, endDate, isActive } = createJobDto\n    let newJob = await this.jobModel.create({\n      name,\n      skills,\n      company,\n      location,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newJob;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user'\n    }\n    return this.jobModel.findOne({\n      _id: id\n    })\n  }\n\n  update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    let updatedJob = this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return updatedJob;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found job'\n    }\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        isDeleted: true\n      }\n    )\n    return this.jobModel.softDelete({\n      _id: id\n    });;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    ForbiddenException,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n        super();\n    }\n\n    canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info, context: ExecutionContext) {\n        const request: Request = context.switchToHttp().getRequest()\n\n        const isSkipPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n\n        // You can throw an exception based on either \"info\" or \"err\" arguments\n        if (err || !user) {\n            throw err || new UnauthorizedException('Token is not valid');\n        }\n        //Check permissions\n        const targetMethod = request.method\n        const targetEndpoint = request.route?.path as string\n\n        const permissions = user?.permissions ?? []\n        let isExist = permissions.find(permissions =>\n            targetMethod === permissions.method\n            && targetEndpoint === permissions.apiPath\n        )\n        if (targetEndpoint.startsWith('/api/v1/auth')) {\n            isExist = true\n        }\n        if (!isExist && !isSkipPermission) {\n            throw new ForbiddenException(\"You don't have permission to access this endpoint\")\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"JWT_ACCESS_TOKEN_SECRET\"),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n    const userRole = role as unknown as { _id: string, name: string }\n    const temp = (await this.rolesService.findOne(userRole._id)).toObject()\n\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: temp?.permissions ?? []\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException(\"Invalid Username/Password !\");\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                            \n                                testCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 0 0 * * 0')\n                \n            \n\n            \n                \n                    Defined in src/mail/mail.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testCron\n                        \n                    \n                \n            \n            \n                \ntestCron()\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schema/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly mailerService: MailerService,\n\n    @InjectModel(Subscriber.name)\n    private readonly subscriberModel: SoftDeleteModel,\n\n    @InjectModel(Job.name)\n    private readonly jobModel: SoftDeleteModel,\n  ) { }\n\n  testCron() {\n\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Test email\")\n  @Cron(\"0 0 0 * * 0\") // 0.00 am every Sunday\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({ skills: { $in: subsSkills } });\n      //todo\n      if (jobWithMatchingSkills?.length) {\n        const jobs = jobWithMatchingSkills.map(item => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" VND\",\n            skills: item.skills\n          }\n        })\n        //build template\n        await this.mailerService.sendMail({\n          to: \"ekkophantoms123@gmail.com\",\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job', // HTML body content\n          context: {\n            receiver: subs.name,\n            jobs: jobs\n          }\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schema/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: configService.get('EMAIL_PREVIEW') === 'true' ? true : false\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      {\n        name: Subscriber.name, schema: SubscriberSchema,\n      },\n      {\n        name: Job.name, schema: JobSchema\n      }\n    ])\n  ],\n  controllers: [MailController],\n  providers: [MailService]\n})\n\nexport class MailModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetDirectory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from \"fs\";\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n    getRootPath = () => {\n        return process.cwd();\n    };\n\n    ensureExists(targetDirectory: string) {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n            if (!error) {\n                console.log('Directory successfully created, or it already exists.');\n                return;\n            }\n            switch (error.code) {\n                case 'EEXIST':\n                    // Error:\n                    // Requested location already exists, but it's not a directory.\n                    break;\n                case 'ENOTDIR':\n                    // Error:\n                    // The parent hierarchy contains a file with the same name as the dir\n                    // you're trying to create.\n                    break;\n                default:\n                    // Some other error like permission denied.\n                    console.error(error);\n                    break;\n            }\n        });\n    }\n\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: diskStorage({\n                destination: (req, file, cb) => {\n                    const folder = req?.headers?.folder_type ?? \"default\";\n                    this.ensureExists(`public/images/${folder}`);\n                    cb(null, join(this.getRootPath(), `public/images/${folder}`))\n                },\n                filename: (req, file, cb) => {\n                    //get image extension\n                    let extName = path.extname(file.originalname);\n                    //get image's name (without extension)\n                    let baseName = path.basename(file.originalname, extName);\n                    let finalName = `${baseName}-${Date.now()}${extName}`\n                    cb(null, finalName)\n                },\n            }),\n            fileFilter: (req, file, cb) => {\n                const allowedFileTypes = ['jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx'];\n                const fileExtension = file.originalname.split('.').pop().toLowerCase();\n                const isValidFileType = allowedFileTypes.includes(fileExtension);\n                if (!isValidFileType) {\n                    cb(new HttpException('Invalid file type', HttpStatus.UNPROCESSABLE_ENTITY), null);\n                } else\n                    cb(null, true);\n            },\n            limits: {\n                fileSize: 1024 * 1024 * 1 // 1MB\n            }\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDTO: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a Permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDTO\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list permission with paginate')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch permission by ID')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage('Create a Permission')\n  async create(\n    @Body() createPermissionDTO: CreatePermissionDto,\n    @User() user: IUser\n  ) {\n    let newPermission = await this.permissionsService.create(createPermissionDTO, user);\n    return {\n      _id: newPermission?._id,\n      createdAt: newPermission?.createdAt\n    };\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch list permission with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch permission by ID')\n  async findOne(@Param('id') id: string) {\n    let foundPermission = await this.permissionsService.findOne(id);\n    return foundPermission\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser\n  ) {\n    let updatePermission = await this.permissionsService.update(id, updatePermissionDto, user);\n    return updatePermission\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a permission')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService]\n})\nexport class PermissionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel\n  ) { }\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    let { name, apiPath, method, module } = createPermissionDto\n    const isExist = await this.permissionModel.findOne({ apiPath, module })\n    if (isExist) {\n      throw new BadRequestException(`Permission with apiPath = ${apiPath}, method = ${method} is not exist!`);\n    }\n    let newPermission = this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newPermission\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.permissionModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not Found Permission`);\n    }\n    return this.permissionModel.findOne({\n      _id: id\n    });\n  }\n\n  async update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Not Found Permission`);\n    }\n    let updatePermission = await this.permissionModel.updateOne(\n      { _id },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return updatePermission\n  }\n\n  async remove(_id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Not Found Permission`);\n    }\n    await this.permissionModel.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        isDeleted: true\n      }\n    )\n    return this.permissionModel.softDelete({ _id })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email khong dung dinh dang'})@IsNotEmpty({message: 'Email khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password khong duoc de trong'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsMongoId,\n    IsString,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role khong duoc de trong' })\n    @IsMongoId({ message: 'Role is following MongoID form' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'dungbum', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n    constructor(private reflector: Reflector) { }\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop()\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.Array })\n    history: {\n        status: string;\n        updatedAt: Date;\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId,\n            email: string\n        }\n    }[]\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumeByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCVDTO: CreateUserCVDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCVDTO\n                                    \n                                                CreateUserCVDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list resumes with paginate')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch resume by ID')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getResumeByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResumeByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get CV by user')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCVDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resume')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  async create(\n    @Body() createUserCVDTO: CreateUserCVDto,\n    @User() user: IUser\n  ) {\n    let newResume = await this.resumesService.create(createUserCVDTO, user);\n    return {\n      _id: newResume?._id,\n      createdAt: newResume?.createdAt\n    };\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get CV by user')\n  getResumeByUser(\n    @User() user: IUser\n  ) {\n    return this.resumesService.findByUsers(user)\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Fetch list resumes with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch resume by ID')\n  findOne(@Param('id') id: string) {\n    let foundResume = this.resumesService.findOne(id);\n    return foundResume\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status resume')\n  async update(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: IUser\n  ) {\n    let updateJob = await this.resumesService.update(id, status, user);\n    return updateJob\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a resume')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    let deletedResume = this.resumesService.remove(id, user);\n    return deletedResume\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCVDto: CreateUserCVDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCVDto\n                                    \n                                                CreateUserCVDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsers(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCVDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel\n  ) { }\n\n  async create(createUserCVDto: CreateUserCVDto, user: IUser) {\n    let { url, companyId, jobId } = createUserCVDto\n    let newResume = await this.resumeModel.create({\n      url, companyId, jobId,\n      email: user.email,\n      userId: user._id,\n      status: \"PENDING\",\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      },\n      history: [\n        {\n          status: \"PENDING\",\n          updatedAt: new Date,\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      ]\n    })\n    return newResume;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found resume'\n    }\n    return this.resumeModel.findOne({\n      _id: id\n    })\n  }\n\n  async update(id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not found resume')\n    }\n\n    let updatedResume = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        $push: {\n          history: [\n            {\n              status: status,\n              updatedAt: new Date,\n              updatedBy: {\n                _id: user._id,\n                email: user.email\n              }\n            }\n          ]\n        }\n      }\n    )\n    return updatedResume;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found resume'\n    }\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        isDeleted: true\n      }\n    )\n    return this.resumeModel.softDelete({\n      _id: id\n    });;\n  }\n\n  async findByUsers(user: IUser) {\n    return await this.resumeModel.find({\n      userId: user._id,\n    })\n      .sort(\"-createdAt\")\n      .populate([\n        {\n          path: \"companyId\",\n          select: { name: 1 }\n        },\n        {\n          path: \"jobId\",\n          select: { name: 1 }\n        }\n      ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch role permission with paginate')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch permission by ID')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a permission')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('role')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  async create(\n    @Body() createRoleDto: CreateRoleDto,\n    @User() user: IUser,\n  ) {\n    let newRole = await this.rolesService.create(createRoleDto, user)\n    return {\n      _id: newRole?._id,\n      createdAt: newRole?.createdAt\n    }\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch role permission with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch permission by ID')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  async update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser\n  ) {\n    let updatePermission = await this.rolesService.update(id, updateRoleDto, user);\n    return updatePermission\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a permission')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService]\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModal: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModal\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModal: SoftDeleteModel\n  ) { }\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    let { name, description, isActive, permissions } = createRoleDto\n    const isExist = await this.roleModal.findOne({ name })\n    if (isExist) {\n      throw new BadRequestException(`Role with name ${name} already exists!`)\n    }\n    let newRole = await this.roleModal.create({\n      name, description, isActive, permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newRole\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.roleModal.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModal.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not Found Role`);\n    }\n    return (await this.roleModal.findById(id))\n      .populate(\n        {\n          path: 'permissions',\n          select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 }\n        })\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not Found Role`);\n    }\n\n    const updateRole = await this.roleModal.updateOne(\n      { _id: id },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return updateRole\n  }\n\n  async remove(_id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Not Found Role`);\n    }\n    const foundRole = await this.roleModal.findById(_id)\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException(`Can not remove ADMIN role`)\n    }\n    await this.roleModal.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        isDeleted: true\n      }\n    )\n    return this.roleModal.softDelete({ _id })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schema/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop()\n    email: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new subscriber')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubscriberDto\n                                    \n                                                CreateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list subscriber with paginate')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch subscriber by ID')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get a subscriber skills')@SkipCheckPermission()\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a subscriber')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update a user')\n                \n            \n\n            \n                \n                    Defined in src/subscribers/subscribers.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateSubscriberDto\n                                    \n                                                UpdateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { Public, ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new subscriber')\n  async create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser\n  ) {\n    let newJob = await this.subscribersService.create(createSubscriberDto, user);\n    return {\n      _id: newJob?._id,\n      createdBy: newJob?.createdBy\n    };\n  }\n\n  @Post('skills')\n  @ResponseMessage('Get a subscriber skills')\n  @SkipCheckPermission()\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user)\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Fetch list subscriber with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch subscriber by ID')\n  findOne(@Param('id') id: string) {\n    let foundSubscriber = this.subscribersService.findOne(id);\n    return foundSubscriber\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage('Update a user')\n  async update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser\n  ) {\n    let updateSubscriber = await this.subscribersService.update(updateSubscriberDto, user);\n    return updateSubscriber\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a subscriber')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    let deletedSubscriber = this.subscribersService.remove(id, user);\n    return deletedSubscriber\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schema/subscriber.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }])],\n  controllers: [SubscribersController],\n  providers: [SubscribersService]\n})\nexport class SubscribersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubscriberDto\n                                    \n                                                CreateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSkills(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/subscribers/subscribers.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateSubscriberDto\n                                    \n                                                UpdateSubscriberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schema/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel\n  ) { }\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    let { email, name, skills } = createSubscriberDto\n    const isExist = await this.subscriberModel.findOne({ email })\n    if (isExist) {\n      throw new BadRequestException(`${email} is exist on the system. Try other emails!`);\n    }\n    let newSubscriber = await this.subscriberModel.create({\n      email,\n      name,\n      skills,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newSubscriber;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.subscriberModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user'\n    }\n    return this.subscriberModel.findOne({\n      _id: id\n    })\n  }\n\n  update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    const updateSubscriber = this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      },\n      { upsert: true }\n    )\n    return updateSubscriber\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found job'\n    }\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return this.subscriberModel.softDelete({ _id: id })\n  }\n\n  async getSkills(user: IUser) {\n    return await this.subscriberModel.findOne({ email: user.email })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/transform.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n    constructor(private reflector: Reflector) { }\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n    _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n    @Prop()\n    name: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    password: string;\n\n    @Prop()\n    age: number;\n\n    @Prop()\n    gender: string;\n\n    @Prop()\n    address: string;\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    refreshToken: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    deletedAt: Date\n\n    @Prop()\n    isDeleted: boolean\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'dungbum', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsEmail,\n    IsNotEmpty,\n    ValidateNested,\n    IsDefined,\n    IsNotEmptyObject,\n    IsObject,\n    IsMongoId,\n    IsString,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role khong duoc de trong' })\n    @IsMongoId({ message: 'Role is following MongoID form' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsDefined()\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name khong duoc de trong' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email khong dung dinh dang' })\n    @IsNotEmpty({ message: 'Email khong duoc de trong' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password khong duoc de trong' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age khong duoc de trong' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender khong duoc de trong' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address khong duoc de trong' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'dungbum', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDTO: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list user with paginate')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch user by ID')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new user')\n  async create(\n    @Body() createUserDTO: CreateUserDto,\n    @User() user: IUser\n  ) {\n    let newUser = await this.usersService.create(createUserDTO, user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt\n    };\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch list user with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch user by ID')\n  async findOne(@Param('id') id: string) {\n    let foundUser = await this.usersService.findOne(id);\n    return foundUser\n  }\n\n  @Patch()\n  @ResponseMessage('Update a user')\n  async update(\n    @Body() updateUserDto: UpdateUserDto,\n    @User() user: IUser\n  ) {\n    let updateUser = await this.usersService.update(updateUserDto, user);\n    return updateUser\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a user')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    let deletedUser = this.usersService.remove(id, user);\n    return deletedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Role.name, schema: RoleSchema }\n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidUserPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModal: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModal\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDTO: CreateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidUserPassword\n                        \n                    \n                \n            \n            \n                \nisValidUserPassword(password: string, hashPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:174\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\nimport { ConfigService } from '@nestjs/config';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema'\n\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(UserM.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModal: SoftDeleteModel\n  ) { }\n\n  getHashPassword = (plain_pass: string) => {\n    const salt = genSaltSync(10);\n    var hash = hashSync(plain_pass, salt);\n    return hash;\n  }\n\n  async create(createUserDTO: CreateUserDto, @User() user: IUser) {\n    let { name, email, password, age, gender, address, role, company } = createUserDTO\n    const isExist = await this.userModel.findOne({ email })\n    if (isExist) {\n      throw new BadRequestException(`${email} is exist on the system. Try other emails!`);\n    }\n    const hashPassword = this.getHashPassword(password)\n    let newUser = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role,\n      company,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newUser;\n\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current\n    delete filter.pageSize\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .select(\"-password\")\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user'\n    }\n    return await this.userModel.findOne({\n      _id: id\n    })\n      .select(\"-password\")\n      .populate({\n        path: \"role\", select: { name: 1, _id: 1 }\n      });\n  }\n\n  findOneByUsername(username: string) {\n    return this.userModel.findOne({\n      email: username\n    })\n      .populate(\n        {\n          path: 'role',\n          select: { name: 1 }\n        });\n  }\n\n  isValidUserPassword(password: string, hashPassword: string) {\n    return compareSync(password, hashPassword); // false\n\n  }\n\n  async update(updateUserDto: UpdateUserDto, @User() user: IUser) {\n    let updateUser = await this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    );\n    return updateUser\n  }\n\n  async remove(id: string, @User() user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user'\n    }\n    const foundUser = await this.userModel.findById(id)\n    if (foundUser && foundUser.email === 'admin@gmail.com') {\n      throw new BadRequestException(\"Can not remove admin account\")\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        isDeleted: true\n      }\n    )\n    return this.userModel.softDelete({\n      _id: id\n    });;\n  }\n\n  async register(user: RegisterUserDto) {\n    let { name, email, password, age, gender, address } = user\n    const isExist = await this.userModel.findOne({ email })\n    if (isExist) {\n      throw new BadRequestException(`${email} is exist on the system. Try other emails!`);\n    }\n    //fetch user role\n    const userRole = await this.userModel.findOne({ name: USER_ROLE })\n    const hashPassword = this.getHashPassword(password)\n    let newRegister = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id\n    })\n    return newRegister\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne(\n      { _id },\n      { refreshToken }\n    )\n  }\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel.findOne(\n      { refreshToken }\n    ).populate({\n      path: 'role',\n      select: { name: 1 }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCVDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.9.1\n        \n            @nestjs/common : 10.2.5\n        \n            @nestjs/config : 3.1.1\n        \n            @nestjs/core : 10.2.5\n        \n            @nestjs/jwt : 10.1.1\n        \n            @nestjs/mapped-types : 2.0.2\n        \n            @nestjs/mongoose : 10.0.1\n        \n            @nestjs/passport : 10.0.2\n        \n            @nestjs/platform-express : 10.2.5\n        \n            @nestjs/schedule : 3.0.3\n        \n            @nestjs/swagger : 7.1.11\n        \n            @nestjs/terminus : 10.0.1\n        \n            @nestjs/throttler : 4.1.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : 1.4.6\n        \n            cron : 2.4.3\n        \n            ejs : 3.1.9\n        \n            functions-have-names : 1.2.3\n        \n            handlebars : 4.7.8\n        \n            helmet : 7.0.0\n        \n            mongoose : 7.5.1\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.5\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Hỏi Dân IT\nMọi thông tin về Tác giả Hỏi Dân IT, các bạn có thể tìm kiếm tại đây:\nWebsite chính thức: https://hoidanit.com.vn/\nYoutube “Hỏi Dân IT” : https://www.youtube.com/@hoidanit\nTiktok “Hỏi Dân IT” :  https://www.tiktok.com/@hoidanit\nFanpage “Hỏi Dân IT” : https://www.facebook.com/askITwithERIC/\nUdemy Hỏi Dân IT: https://www.udemy.com/user/eric-7039/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://hoidanit.com.vn/\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schema/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:47:49.369Z\",\n        \"updatedAt\": \"2023-06-15T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:48:22.224Z\",\n        \"updatedAt\": \"2023-06-15T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:01.241Z\",\n        \"updatedAt\": \"2023-06-15T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:23.973Z\",\n        \"updatedAt\": \"2023-06-15T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:54:32.799Z\",\n        \"updatedAt\": \"2023-06-15T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:31.898Z\",\n        \"updatedAt\": \"2023-06-15T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:51.041Z\",\n        \"updatedAt\": \"2023-06-15T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:13.364Z\",\n        \"updatedAt\": \"2023-06-15T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:41.934Z\",\n        \"updatedAt\": \"2023-06-15T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:56.274Z\",\n        \"updatedAt\": \"2023-06-15T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:01:36.923Z\",\n        \"updatedAt\": \"2023-06-15T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:16.508Z\",\n        \"updatedAt\": \"2023-06-15T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:33.697Z\",\n        \"updatedAt\": \"2023-06-15T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:46.085Z\",\n        \"updatedAt\": \"2023-06-15T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:24.175Z\",\n        \"updatedAt\": \"2023-06-15T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:37.896Z\",\n        \"updatedAt\": \"2023-06-15T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:14.659Z\",\n        \"updatedAt\": \"2023-06-15T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:33.395Z\",\n        \"updatedAt\": \"2023-06-15T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:50.801Z\",\n        \"updatedAt\": \"2023-06-15T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:15.785Z\",\n        \"updatedAt\": \"2023-06-15T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:41.694Z\",\n        \"updatedAt\": \"2023-06-15T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"Fetch resumes by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:05.961Z\",\n        \"updatedAt\": \"2023-06-15T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:50.946Z\",\n        \"updatedAt\": \"2023-06-15T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:10.914Z\",\n        \"updatedAt\": \"2023-06-15T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:33.234Z\",\n        \"updatedAt\": \"2023-06-15T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:48.081Z\",\n        \"updatedAt\": \"2023-06-15T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:11.323Z\",\n        \"updatedAt\": \"2023-06-15T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:51.974Z\",\n        \"updatedAt\": \"2023-06-15T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:06.618Z\",\n        \"updatedAt\": \"2023-06-15T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:20.853Z\",\n        \"updatedAt\": \"2023-06-15T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:36.836Z\",\n        \"updatedAt\": \"2023-06-15T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:52.798Z\",\n        \"updatedAt\": \"2023-06-15T09:13:52.798Z\",\n        \"__v\": 0\n    }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n    SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: unknown, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schema/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
